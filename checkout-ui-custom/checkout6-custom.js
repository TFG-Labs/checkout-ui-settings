(() => {
  const e = () => '\n  <p id="box-pickup-complement" \n  class="input custom-field-complement tfg-custom-addressForm">\n    <label>Mobile number</label>\n    <input \n      id="custom-pickup-complement" \n      class="input-xlarge success" \n      type="tel" \n      name="complement" \n      placeholder="" \n    />\n  </p>'; const t = '#/shipping'; const s = '#/payment'; const n = 'ricafields'; const a = 'tvfields'; const i = 'pickup'; const o = window.location.host.includes('bash.com') ? 'https://store-api.www.bash.com/custom-api/' : `${window.location.protocol}//${window.location.host}/custom-api/`; const r = '1169288799'; const d = () => window.vtexjs.checkout.orderForm?.shippingData?.address?.complement || window.vtexjs.checkout.orderForm?.clientProfileData?.phone || document?.getElementById('client-phone')?.value; const c = (e) => { const t = [r]; const s = ['938942995']; const n = ['24833302']; const a = []; let i = !1; let o = !1; let d = !1; let c = !1; return e.forEach(((e) => { const r = e.productCategoryIds.split('/'); a.push(r), r.forEach(((e) => { e && (s.includes(e) && (i = !0), n.includes(e) && (o = !0), t.includes(e) && (d = !0)); })); })), c = e.length > 1 && d && !a.every(((e) => e === r)), { hasFurniture: d, hasSimCards: o, hasTVs: i, hasFurnitureMixed: c, categories: a }; }; const l = () => { $('.shimmer').removeClass('shimmer'); }; const u = ({ name: e, options: t = [] }) => `\n  \n  <div class="bash--radio-options">\n  ${t.map((({ value: t, label: s, checked: n = !1, disabled: a = !1 }) => `\n      <label class="bash--radio-option" id="radio-label-${e}-${t}">\n        <input type="radio" \n          ${n ? "checked='checked'" : ''} \n          ${a ? "disabled='disabled'" : ''} \n          value="${t ?? ''}" \n          name="${e}" \n          id="radio-${e}-${t}"\n        />\n          <span class="radio-icon"></span> \n          ${s ? `<span class="radio-label">${s}</span>` : ''}\n      </label>\n    `)).join('')}\n   \n  </div>\n  `; const p = (e, t) => JSON.stringify({ street: e.street, neighborhood: e.neighborhood, city: e.city, postalCode: e.postalCode }) === JSON.stringify({ street: t.street, neighborhood: t.neighborhood, city: t.city, postalCode: t.postalCode }); const h = (e) => { if (!e) return ''; const { number: t, street: s, neighborhood: n, postalCode: a, city: i, receiverName: o, addressName: r, complement: d } = e; const c = [`${t ? `${t} ` : ''}${s}`, n ?? i, a].join(', ').trim(); const l = [o, U(O(d))].join(' - '); const h = window?.vtexjs?.checkout?.orderForm?.shippingData?.address; return `\n<label id="address-${r}" class="bash--address-listing" data-address="${encodeURIComponent(JSON.stringify(e))}">\n  <div class="address-radio">\n  ${u({ name: 'selected-address', options: [{ checked: !!h ?? p(e, h), value: r }] })}\n  </div>\n  <div class="address-text">\n    <div>${c}</div>    \n    <div>${l}</div>  \n  </div>\n  <div class="address-edit">\n    <a href="#" data-view="address-edit" data-content="address-${r}">\n      Edit\n    </a>\n  </div>\n</label>\n`; }; const m = (e) => { throw console.error('ERROR', e), new Error(e); }; const v = ({ cookie: e, cache: t, json: s }) => { const n = new Headers(); return e && n.append('Cookie', document?.cookie), t && n.append('Cache-Control', 'no-cache'), s && n.append('Content-type', 'application/json'), n; }; const g = new class {
    constructor() { this.indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB || window.shimIndexedDB, this.checkoutDB = indexedDB.open('checkoutDB', 1.2), this.checkoutDB.onerror = (e) => { throw console.error('CheckoutDB Error', { event: e }), new Error('Could not load checkoutDB'); }, this.checkoutDB.onupgradeneeded = () => { const e = this.checkoutDB.result.createObjectStore('addresses', { keyPath: 'addressName' }); e.createIndex('address_street', ['street'], { unique: !1 }), e.createIndex('address_addressName', ['addressName'], { unique: !0 }), e.createIndex('address_street_suburb_city_postal', ['street', 'neighborhood', 'city', 'postalCode'], { unique: !0 }); }, this.checkoutDB.onsuccess = () => { const e = this.checkoutDB.result.transaction('addresses', 'readwrite'); this.addresses = e.objectStore('addresses'), e.oncomplete = () => { }; }; }

    store() { return this.checkoutDB.result.transaction('addresses', 'readwrite').objectStore('addresses'); }

    loadAddresses(e) { const t = e.map(((e) => this.addOrUpdateAddress(e))); return Promise.all(t).then(((e) => e)); }

    addOrUpdateAddress(e) { const t = this; return new Promise(((s, n) => { const a = t.store().put(e); a.onsuccess = () => { s({ success: !0, addressId: a.result }); }, a.onerror = (e) => { n(new Error({ sucess: !1, error: e?.target?.error })); }; })); }

    getAddresses() { const e = this; return new Promise(((t) => { const s = e.store().getAll(); s.onsuccess = () => t(s.result), s.onerror = () => { console.error('Something wrong with getAddresses ? ...'), t([]); }; })); }

    getAddress(e) { const t = this; return new Promise(((s) => { const n = t.store().get(e); n.onsuccess = () => s(n.result), n.onerror = () => { console.error('Something wrong with getAddress ? ...'), s([]); }; })); }

    deleteAddress(e) { const t = this.addresses.delete(e); t.onsuccess = () => t.result; }

    clearData() { const e = this; return new Promise(((t) => { const s = e.store().clear(); s.onsuccess = () => t(s.result), s.onerror = () => { console.error('Something wrong with clearData ? ...'), t([]); }; })); }
  }(); const b = (e) => { let t = $(`#address-${e.addressName}`); t.length ? (t.after(h(e)), t.remove(), t = null) : $('#bash-address-list').append(h(e)), $('input[type="radio"][name="selected-address"]:checked').attr('checked', !1), $(`input[type="radio"][name="selected-address"][value="${e.addressName}"]`).attr('checked', !0); }; const y = async (e) => { if (!e.addressName) { const t = e.street.replace(/[^a-zA-Z0-9]/g, ' ').trim().replace(/\s/g, '-').toLowerCase(); e.addressName = `${Date.now()}-${t}`.substring(0, 50); } e.addressId || (e.addressId = e.addressName), g.addOrUpdateAddress(e).then((() => b(e))), (async (e) => { let t; const { email: s } = window.vtexjs.checkout.orderForm.clientProfileData; if (!e) return Promise.reject(new Error('No address provided.')); const n = e.addressName ? await (async (e, t) => { let s = {}; const n = { headers: v({ cookie: !0, cache: !0, json: !1 }), credentials: 'include' }; const a = await fetch(`${o}masterdata/addresses/?_fields=id&_where=addressName=${e}&timestamp=${Date.now()}`, n).then(((e) => e.json())).catch(((e) => m(`GET_ADDRESS_ERROR: ${e?.message}`))); return a && !a.error && a.data && a.data.length > 0 && ([s] = a.data), s; })(e.addressName) : {}; t = n?.id ? `${o}masterdata/address/${n.id}` : `${o}masterdata/addresses`, e.complement = e.complement || d(); const a = { userId: s, ...e }; n.id || (a.addressName = e.addressId || `address-${Date.now()}`); const i = { method: 'PATCH', headers: v({ cookie: !0, cache: !0, json: !0 }), body: JSON.stringify(a), credentials: 'include' }; await fetch(t, i).then(((e) => (e.status !== 204 ? e.json() : e))).then(((e) => e)).catch(((e) => m(`SAVE_ADDRESS_ERROR: ${e?.message}`))); })(e); }; const w = async (e) => g.getAddress(e); const f = async () => g.clearData(); const k = async (e, t, s = !1) => { const { orderFormId: n } = window.vtexjs.checkout.orderForm; const a = `/api/checkout/pub/orderForm/${n}/customData/${e}`; const i = JSON.stringify({ ...t, ...s && { sameAddress: new Boolean(t.sameAddress) } }); return fetch(a, { method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: i }); }; const x = (e) => { const { customData: t } = window.vtexjs.checkout.orderForm; let s = {}; return t && t.customApps && t.customApps.length > 0 && t.customApps.forEach(((t) => { t.id === e && (s = t.fields); })), s; }; const C = ['receiverName', 'complement', 'street', 'neighborhood', 'state', 'city', 'country', 'postalCode']; const F = ['idOrPassport', 'sameAddress', 'fullName', 'streetAddress', 'suburb', 'city', 'postalCode', 'province']; const I = ['tvID']; const S = ['residential', 'inStore', 'commercial', 'giftRegistry', 'pickup', 'search']; const A = () => { document.querySelector('.bash--delivery-container').classList.add('shimmer'); }; const D = () => { document.querySelector('.delivery-group-content')?.classList?.add('shimmer'), document.querySelector('.vtex-omnishipping-1-x-ask')?.classList?.add('shimmer'); }; const E = (e) => { switch (e) { case 'Select': return ''; case 'Western Cape': return 'WC'; case 'Easter Cape': return 'EC'; case 'Gauteng': return 'GP'; case 'KwaZulu-Natal': case 'KwaZulu Natal': return 'KZN'; case 'Northern Cape': return 'NC'; case 'Limpopo': return 'LP'; case 'Mpumalanga': return 'MP'; case 'North West': return 'NW'; case 'Freestate': case 'Free State': return 'FS'; default: return e; } }; const N = () => { const e = window?.vtexjs?.checkout?.orderForm?.shippingData?.address?.receiverName; const t = window?.vtexjs?.checkout?.orderForm?.clientProfileData?.firstName; const s = window?.vtexjs?.checkout?.orderForm?.clientProfileData?.lastName; const n = `${t ?? ''} ${s ?? ''}`.trim(); return e || document.getElementById('client-first-name')?.value || n; }; const j = (e) => { const { number: t, street: s, companyBuilding: n, neighborhood: a, postalCode: i, state: o, city: r, receiverName: d, complement: c, id: l, addressId: u, addressName: p, geoCoordinate: h } = e; let m; let v; document.getElementById('bash--address-form').reset(); try { [m, v] = JSON.parse(JSON.stringify(h)); } catch (t) { console.error('Could not parse geo coords', { address: e, geoCoordinate: h }); } d && (document.getElementById('bash--input-receiverName').value = d ?? ''), c && (document.getElementById('bash--input-complement').value = c ?? ''), (l || u) && (document.getElementById('bash--input-addressId').value = l || u), p && (document.getElementById('bash--input-addressName').value = p); const g = `${t ? `${t} ` : ''}${s}`.replace(`, ${n}`, ''); document.getElementById('bash--input-number').value = '', document.getElementById('bash--input-street').value = g || '', document.getElementById('bash--input-companyBuilding').value = n || '', document.getElementById('bash--input-neighborhood').value = a || '', document.getElementById('bash--input-city').value = r || '', document.getElementById('bash--input-postalCode').value = i || '', document.getElementById('bash--input-state').value = E(o), document.getElementById('bash--input-lat').value = m || '', document.getElementById('bash--input-lng').value = v || '', $(':invalid').trigger('change'); }; const B = (e) => { setTimeout((() => { const t = document.querySelectorAll('.pac-container'); const s = document.querySelectorAll(".pac-container[style*='display: none']"); t?.length === s?.length && e.target?.value?.length > 3 ? $('#address-search-field-container:not(.no-results)').addClass('no-results') : $('#address-search-field-container.no-results').removeClass('no-results'); }), 250); }; const T = (e, t, s = '', n = !1) => { if (e) { for (let a = 0; a < t.length; a++) { const i = `bash--input-${s}${t[a]}`; !document.getElementById(i) || !e[t[a]] && !n || document.getElementById(i).value && !n || (document.getElementById(i).value = e[t[a]]); } $(':invalid').trigger('change'); } }; const _ = () => { const { address: e } = window.vtexjs.checkout.orderForm.shippingData; if (document.getElementById('bash--input-rica_streetAddress')?.value || !e) return; e.fullName = N(), e.streetAddress = e.street, e.suburb = e.neighborhood, e.province = e.state, T(e, F, 'rica_'); const t = x(n); t.streetAddress && T(t, F, 'rica_', !0); }; const P = (e, t = !0) => { const { items: s } = window.vtexjs.checkout.orderForm; const { hasTVs: n, hasSimCards: a } = c(s); let i = []; const o = []; i = [...C], n && t && (i = [...i, ...I]), a && t && (i = [...i, ...F]); for (let t = 0; t < i.length; t++)e[i[t]] || o.push(i[t]); return { isValid: !o.length, invalidFields: o }; }; const q = () => { const { items: e } = window.vtexjs.checkout.orderForm; const { hasTVs: t, hasSimCards: s, hasFurnitureMixed: n } = c(e); const a = '#shipping-data'; t ? $(`${a}:not(.has-tv)`).addClass('has-tv') : $(`${a}.has-tv`).removeClass('has-tv'), s ? $(`${a}:not(.has-rica)`).addClass('has-rica') : $(`${a}.has-rica`).removeClass('has-rica'), n ? $(`${a}:not(.has-furniture-mixed)`).addClass('has-furniture-mixed') : $(`${a}.has-furniture-mixed`).removeClass('has-furniture-mixed'); }; const R = (e = []) => { if ($('#bash-delivery-error-container').length < 1) return; const t = e.length > 0 ? e.map(((e) => (({ text: e, fields: t }) => { if (!t.itemIndex) return ''; const s = window.vtexjs.checkout?.orderForm.items?.[t.itemIndex]; if (!s) return ''; const n = s?.imageUrl; return ` \n<div id="bash-delivery-error" class="notification error" alt="${t?.skuName ?? ''}" >\n   \x3c!---<div class="icon"></div>---\x3e\n   ${n ? `<img src="${n}" style=" float: right; " />` : ''}\n   <div class="notification-content">\n      <h3>Address error ${t?.skuName ? `- ${t?.skuName}` : ''}</h3>\n      <p>${e}</p>\n      <p>Check the postal code of your address, or \n      <a href="#" \n        class="remove-cart-item"\n        style="color: white; text-decoration: underline"\n        data-index="${t.itemIndex}">remove this item from your cart</a>.\n      </p>\n   </div>  \n</div>  \n`; })(e))) : ''; $('#bash-delivery-error-container').html(t), e.length > 0 && $('html, body').animate({ scrollTop: $('#bash-delivery-error-container').offset().top }, 400); }; const V = (e, t = { validateExtraFields: !0 }) => { const { validateExtraFields: s } = t; const { items: n } = window.vtexjs.checkout.orderForm; const { hasTVs: a, hasSimCards: i } = c(n); a && T(e, I, 'tv_'), i && _(); const { isValid: o, invalidFields: r } = P(e, s); if (!o) return j(e), $('#bash--address-form').addClass('show-form-errors'), s && $('#bash--delivery-form')?.addClass('show-form-errors'), $(`#bash--input-${r[0]}`).focus(), C.includes(r[0]) && window.postMessage({ action: 'setDeliveryView', view: 'address-edit' }), { success: !1, error: 'Invalid address details.' }; e.addressType === 'business' && (e.addressType = 'commercial'), S.includes(e.addressType) || (e.addressType = 'residential'), e.number && (e.street = `${e.number} ${e.street}`, e.number = ''); const { shippingData: d } = window?.vtexjs?.checkout?.orderForm; return d.address = e, d.selectedAddresses = [e], e.companyBuilding && !d.address.street.includes(`, ${e.companyBuilding}`) && (d.address.street = `${e.street}, ${e.companyBuilding}`), d.selectedAddresses[0] = d.address, A(), window.vtexjs.checkout.sendAttachment('shippingData', d).then(((t) => { const { messages: s } = t; const n = s.filter(((e) => e.status === 'error')); return n.length > 0 ? (R(n), window.postMessage({ action: 'setDeliveryView', view: 'address-form' }), { success: !1, errors: n }) : (e.addressName && b(e), { success: !0 }); })).done((() => l())); }; const M = async (e) => { e.preventDefault(), $('select').change(); const t = document.forms['bash--address-form']; const s = $('#bash--input-addressName').val(); const n = ['addressId', 'addressName', 'addressType', 'receiverName', 'postalCode', 'city', 'state', 'country', 'street', 'neighborhood', 'complement', 'companyBuilding', 'lat', 'lng']; const a = { isDisposable: !1, reference: null, country: 'ZAF', ...await w(s), number: '' }; for (let e = 0; e < n.length; e++)a[n[e]] = t[n[e]]?.value || null; a.addressName = a.addressName || a.addressId, a.addressId = a.addressId || a.addressName, a.geoCoordinate = [parseFloat(a.lat) || '', parseFloat(a.lng) || ''], a.geoCoordinates = [parseFloat(a.lat) || '', parseFloat(a.lng) || '']; const i = a; const { isValid: o, invalidFields: r } = P(a, !1); if (!o) return console.error({ invalidFields: r }), $('#bash--address-form').addClass('show-form-errors'), $(`#bash--input-${r[0]}`).focus(), void (C.includes(r[0]) && window.postMessage({ action: 'setDeliveryView', view: 'address-form' })); const d = await V(i, { validateExtraFields: !1 }); const { success: c } = d; c ? (await y(a), window.postMessage({ action: 'setDeliveryView', view: 'select-address' }), (() => { $('.alert-container').addClass('show'), $('.alert-container').slideDown(); const e = $('[data-view="address-form"]').length > 0 ? 'Address added' : 'Address updated'; $('#bash-alert-container').html((({ text: e }) => `<div class='alert-container'>\n      <p>${e}</p>\n    </div>\n  `)({ text: e })), setTimeout((() => { $('.alert-container').slideUp(); }), 5e3); })()) : console.error('Set address error', { setAddressResponse: d }); }; const L = async (e) => { e.preventDefault(); const { items: t } = window.vtexjs.checkout.orderForm; const { address: i } = window.vtexjs.checkout.orderForm.shippingData; const { hasTVs: o, hasSimCards: r } = c(t); $('select').change(); let d = {}; const u = "[name='selected-address']:checked"; if ($(u).length < 1) return void $('html, body').animate({ scrollTop: $('#bash--delivery-form').offset().top }, 400); A(); const p = await w($(u).val()); d = { ...i, ...p }; const { success: h } = await V(d, { validateExtraFields: !1 }); if (!h) return console.error('Delivery Form - Address Validation error'), void l(); const m = {}; const v = {}; if (r) { const e = F; for (let t = 0; t < e.length; t++) { if (e[t] === 'sameAddress') { const s = $(`#bash--input-${e[t]}`).is(':checked'); m[e[t]] = s; } m[e[t]] = $(`#bash--input-rica_${e[t]}`).val() || ''; } const t = await k(n, m, !0); console.info({ ricaDataSent: t }); } if (o) { const e = I; for (let t = 0; t < e.length; t++)i[e[t]] || (d[e[t]] = $(`#bash--input-tv_${e[t]}`).val()), v[e[t]] = $(`#bash--input-tv_${e[t]}`).val() || ''; const t = await k(a, v); console.info({ tvDataSent: t }); } await y(d), $('.bash--delivery-container').css('display', 'none'), window.location.hash = s, l(); }; const O = (e) => { if (!e) return ''; let t = e.replace(/\s/g, ''); return t.length === 9 && t[0] !== '0' && (t = `0${t}`), t; }; const U = (e) => [e.slice(0, 3), e.slice(3, 6), e.slice(6)].join(' '); const W = (e, t) => { if ((e = e.replace(/[^0-9+*#]+/g, '').trim())[0] === '0') { if (e.length >= 6) { const s = [e.slice(0, 3), e.slice(3, 6), e.slice(6)].join(' '); return t ? s.trim() : s; } if (e.length >= 3) { const s = [e.slice(0, 3), e.slice(3)].join(' '); return t ? s.trim() : s; } } else { if (e.length >= 5) { const s = [e.slice(0, 2), e.slice(2, 5), e.slice(5)].join(' '); return t ? s.trim() : s; } if (e.length >= 2) { const s = [e.slice(0, 2), e.slice(2)].join(' '); return t ? s.trim() : s; } } return t ? e.trim() : e; }; const Z = (e) => { const t = document.querySelector(e); t && (t.setAttribute('maxlength', 12), t.value = W(t.value), $(document).off('keyup', e), $(document).on('keyup', e, (function (e) { const t = $(this); const s = t.val().replace(/[^0-9+*#]+/g, ''); const n = e.keyCode === 8; const a = W(s, n); t.parent('.text').removeClass('error'), t.parent('.text').find('span.error').hide(), t.val(a); }))); }; const J = (() => { const n = { inCollect: !1, pickupSelected: !1, validForm: !1, runningObserver: !1, collectReset: !1 }; const a = () => { $('.shp-alert.vtex-omnishipping-1-x-warning').remove(), $('.pickup-marker-blue').remove(), $('#change-pickup-button').length && ($('<button class="vtex-omnishipping-1-x-pickupPointSeeMore button-see-pickup-point btn btn-link" id="tfg-pickup-see-more-button" type="button">Collect Point Details</button>').appendTo('.vtex-omnishipping-1-x-PickupPoint'), $('<button class="vtex-change-pickup button-change-pickup-point" id="tfg-pickup-button" type="button">Change</button>').appendTo('.vtex-omnishipping-1-x-PickupPoint'), $('#change-pickup-button').remove(), $('#details-pickup-button').remove()), $('.vtex-omnishipping-1-x-ask').length && ($('.vtex-omnishipping-1-x-ask').empty(), $('<div class="pickup-map-container">\n          <div class="pickup-map-icon">\n            <svg class="icon-map" xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 48 48" fill="none">\n              <rect width="48" height="48" rx="24" fill="#2424E4"/>\n              <path d="M24.2147 11C21.5065 11.0031 18.9102 12.0802 16.9952 13.9952C15.0802 15.9102 14.0031 18.5065 14 21.2147C14 29.9552 23.2861 36.5599 23.6807 36.8385C23.8389 36.9438 24.0247 37 24.2147 37C24.4047 37 24.5905 36.9438 24.7486 36.8385C25.1433 36.5599 34.4294 29.9552 34.4294 21.2147C34.4263 18.5065 33.3491 15.9102 31.4342 13.9952C29.5192 12.0802 26.9228 11.0031 24.2147 11ZM24.2147 17.5003C24.9493 17.5003 25.6675 17.7181 26.2783 18.1262C26.8891 18.5344 27.3652 19.1145 27.6464 19.7932C27.9275 20.472 28.0011 21.2188 27.8577 21.9393C27.7144 22.6599 27.3607 23.3217 26.8412 23.8412C26.3217 24.3607 25.6599 24.7144 24.9393 24.8577C24.2188 25.0011 23.472 24.9275 22.7932 24.6464C22.1145 24.3652 21.5344 23.8891 21.1262 23.2783C20.7181 22.6675 20.5003 21.9493 20.5003 21.2147C20.5003 20.2296 20.8916 19.2848 21.5882 18.5882C22.2848 17.8916 23.2296 17.5003 24.2147 17.5003Z" fill="#FCFCFC"/>\n            </svg>\n            Find nearby collect points\n            <div class="pickup-map-text">\n              Search for addresses that you frequently use and we’ll locate stores nearby.\n            </div>\n          </div>\n          <button class="pickup-map-geolocation" id="find-pickups-button-new" type="button">\n            <svg xmlns="http://www.w3.org/2000/svg" width="15" height="16" viewBox="0 0 15 16" fill="none">\n              <path d="M1.12954 2.34666L5.24985 14.2506C5.42563 14.7639 6.15688 14.7498 6.3186 14.2295L7.97798 8.84354C8.00302 8.75549 8.05054 8.67548 8.11588 8.61138C8.18122 8.54727 8.26213 8.50127 8.35063 8.47791L13.7295 6.81854C14.2499 6.65682 14.2639 5.92557 13.7506 5.74979L1.84672 1.62948C1.74671 1.59433 1.6388 1.58815 1.53542 1.61167C1.43205 1.63519 1.33743 1.68745 1.26247 1.76241C1.18751 1.83737 1.13525 1.93199 1.11173 2.03536C1.08822 2.13873 1.09439 2.24665 1.12954 2.34666V2.34666Z" stroke="#2424E4" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>\n            </svg>\n            Use my current location\n          </button>\n          <button class="pickup-map-manual" id="find-pickups-manually-search">\n            Manually search for an address\n          </button>\n        </div>').appendTo('.vtex-omnishipping-1-x-ask')), $('#pkpmodal-close').unbind().click((() => { $('#tfg-pickup-map').remove(); })); const e = function (e) { $('<div class="tfg-pickup-map" id="tfg-pickup-map"><div class="tfg-pickup-map-content"></div></div>').appendTo($('body')), $('body').css('position', 'fixed'), $('body').css('width', '100%'); const t = document.createElement('iframe'); t.src = 'https://pickup-map.bashconnect.com/', t.width = '100%', t.height = '100%', t.id = 'map', t.allow = 'geolocation', $(t).appendTo('.tfg-pickup-map-content'), window.Penpal.connectToChild({ iframe: t, methods: { sendAttachment: (e) => { D(), window.vtexjs.checkout.sendAttachment('shippingData', e), $('#tfg-pickup-map').remove(), $('body').css('overflow', 'auto'), $('body').css('width', 'auto'), $('body').css('position', 'relative'); }, getCheckoutJS: () => window.vtexjs.checkout.orderForm, getSpecialFields: () => c(window.vtexjs.checkout.orderForm.items), remove: () => { $('#tfg-pickup-map').remove(), $('body').css('overflow', 'auto'), $('body').css('width', 'auto'), $('body').css('position', 'relative'); }, getState: () => e } }), $('#tfg-pickup-map').click(((e) => { e.stopPropagation(), $('#tfg-pickup-map').remove(), $('body').css('overflow', 'auto'), $('body').css('width', 'auto'), $('body').css('position', 'relative'); })); }; $('#tfg-pickup-button').unbind().click((() => e('none'))), $('#tfg-pickup-see-more-button').unbind().click((() => e('pickup'))), $('#find-pickups-button-new').unbind().click((() => e('geolocate'))), $('#find-pickups-manually-search').unbind().click((() => e('manual'))); }; const o = () => { if ($('span.help.error').remove(), n.validForm = !0, ['pickup-receiver', 'custom-pickup-complement'].forEach(((e) => { let t; let s = !0; switch (e) { case 'pickup-receiver': s = !($(`#${e}`).length > 0 && !$(`#${e}`).attr('disabled') && !$(`#${e}`).val()), t = '.shp-pickup-receiver'; break; case 'custom-pickup-complement': s = !!(a = $(`#${e}`).val()) && ((a = a.replace(/\s/g, ''))[0] === '0' ? a.match(/[0-9\s]{10}/) : a.match(/[0-9\s]{9,}/)), t = '#box-pickup-complement'; } let a; s ? $(t).removeClass('error') : ($(t).addClass('error'), $(t).append('<span class="help error">This field is required.</span>'), $(`${t} span.error`).show(), n.validForm = !1); })), n.validForm) { let e = $('#custom-pickup-complement').val().replace(/\s/g, ''); e.length === 9 && e[0] !== '0' && (e = `0${e}`), localStorage.setItem('saving-shipping-collect', !0), $('#btn-go-to-payment').trigger('click'), window.vtexjs.checkout.getOrderForm().then(((t) => { const { address: s } = t.shippingData; return k(i, { phone: e }).then((() => { let t; let n; t = s.receiverName, n = e, t && n && ($('.vtex-omnishipping-1-x-SummaryItemAddress .collect-receiver').length ? $('.collect-receiver').html(`${t} - ${n} `) : $('.vtex-omnishipping-1-x-SummaryItemAddress').append(`<p class="collect-receiver">\n      ${t} - ${n}\n      </p>`)); })), window.vtexjs.checkout.calculateShipping(s); })).done((() => { localStorage.removeItem('saving-shipping-collect'); })); } }; const r = () => { const r = $('div#postalCode-finished-loading').length > 0; $('#shipping-option-pickup-in-point').one('click', (() => { n.collectReset = !0; })), window.location.hash === t && r ? (n.inCollect = $('#shipping-option-pickup-in-point').hasClass('shp-method-option-active'), n.pickupSelected = $('div.ask-for-geolocation').length === 0, n.inCollect && (($('#tfg-pickup-button').length || $('#tfg-pickup-see-more-button').length) && ($('#find-pickups-manually-search').length || $('#find-pickups-button-new').length) || a(), l(), n.pickupSelected && !n.collectReset ? ($('button.shp-pickup-receiver__btn').trigger('click'), $('div.shp-pickup-receiver').addClass('show'), $('p#box-pickup-complement').addClass('show'), (() => { const t = window.vtexjs.checkout.orderForm?.clientProfileData?.phone ?? $('#client-phone').val() ?? ''; $('input#custom-pickup-complement').length === 0 ? ($('.btn-go-to-payment-wrapper').before(e), (() => { const e = document.querySelector('input#custom-pickup-complement'); e && e.setAttribute('placeholder', ''); })(), t && $('input#custom-pickup-complement').val(t)) : $('input#custom-pickup-complement').val() === '' && $('input#custom-pickup-complement').val(t), (() => { const { firstName: e, lastName: t } = window.vtexjs.checkout.orderForm?.clientProfileData; const s = $('#client-first-name').val(); const n = $('#client-last-name').val(); const a = e ? [e, t].join(' ') : [s, n].join(' '); $('input#pickup-receiver').val() === '' && ($('input#pickup-receiver').val(a.trim()), window.vtexjs.checkout.getOrderForm().then(((e) => { const { shippingData: t } = e; return t.address.receiverName = a.trim(), window.vtexjs.checkout.sendAttachment('shippingData', t); }))); })(); })(), (() => { if ($('#custom-go-to-payment').length <= 0) { const e = $('#btn-go-to-payment'); const t = e.clone(!1); $(e).hide(), $(t).data('bind', ''), $(t).removeAttr('id').attr('id', 'custom-go-to-payment'), $(t).removeAttr('data-bind'), $(t).css('display', 'block'), $('p.btn-go-to-payment-wrapper').append(t), $(t).on('click', o); } })()) : ($('div.shp-pickup-receiver').removeClass('show'), $('p#box-pickup-complement').removeClass('show')), n.collectReset && ((() => { $('.delivery-group-content').empty(), $('.btn-go-to-payment-wrapper').empty(), $('<div><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M12,1A11,11,0,1,0,23,12,11,11,0,0,0,12,1Zm0,19a8,8,0,1,1,8-8A8,8,0,0,1,12,20Z" opacity=".25" stroke="#FCFCFC" fill="#FCFCFC"/><path d="M12,4a8,8,0,0,1,7.89,6.7A1.53,1.53,0,0,0,21.38,12h0a1.5,1.5,0,0,0,1.48-1.75,11,11,0,0,0-21.72,0A1.5,1.5,0,0,0,2.62,12h0a1.53,1.53,0,0,0,1.49-1.3A8,8,0,0,1,12,4Z" stroke="#000" fill="#000"><animateTransform attributeName="transform" type="rotate" dur="0.75s" values="0 12 12;360 12 12" repeatCount="indefinite"/></path></svg><div>').css({ display: 'flex', 'justify-content': 'center', 'align-items': 'center', 'min-height': '100px' }).appendTo('.delivery-group-content'); const { orderForm: e } = window.vtexjs.checkout; const { shippingData: t } = e; const s = { ...t, address: null, availableAddresses: t.availableAddresses, selectedAddresses: t.selectedAddresses.filter(((e) => e.addressType !== 'search')), logisticsInfo: t.logisticsInfo }; window.vtexjs.checkout.sendAttachment('shippingData', s), D(), a(); })(), n.collectReset = !1), $('p.vtex-omnishipping-1-x-shippingSectionTitle').text('Collect options'), $('#change-pickup-button').text('Available pickup points'), $('h2.vtex-omnishipping-1-x-geolocationTitle.ask-for-geolocation-title').text('Find nearby Click & Collect points'), $('h3.vtex-omnishipping-1-x-subtitle.ask-for-geolocation-subtitle').text("Search for addresses that you frequently use and we'll locate stores nearby."), n.pickupSelected && $('label.shp-pickup-receiver__label').text("Recipient's name")), localStorage.getItem('shipping-incomplete-values') && ($('#custom-go-to-payment').trigger('click'), localStorage.removeItem('shipping-incomplete-values'))) : ($('#box-pickup-complement').remove(), window.location.hash === s && setTimeout((() => { const e = window.vtexjs.checkout.orderForm?.shippingData?.address; if (!localStorage.getItem('saving-shipping-collect')) { const { phone: s } = x(i); !e || e.addressType !== 'search' || e.receiverName && s || (window.location.hash = t, localStorage.setItem('shipping-incomplete-values', !0)); } }), 1e3)), d(); }; const d = () => { if (n.runningObserver) return; const e = document.querySelector('.shipping-container .box-step'); const t = new MutationObserver((() => { n.runningObserver = !0, r(); })); e && t.observe(e, { attributes: !1, childList: !0, characterData: !1 }); }; return $(document).ready((() => { r(); })), $(window).on('hashchange orderFormUpdated.vtex', (() => { r(); })), { state: n, init: () => { } }; })(); const G = () => ((async () => { const e = await g.getAddresses(); return e.length > 0 ? { data: e } : window.vtexjs.checkout.getOrderForm().then(((e) => { const { email: t } = e?.clientProfileData; const s = ['id', 'addressType', 'addressQuery', 'addressName', 'reference', 'number', 'geolocation', 'receiverName', 'complement', 'companyBuilding', 'street', 'neighborhood', 'city', 'postalCode', 'state', 'country', 'tvID', 'geoCoordinate'].join(','); const n = { headers: v({ cookie: !0, cache: !0, json: !1 }), credentials: 'include' }; const a = Date.now(); return fetch(`${o}masterdata/addresses?t=${a}&_fields=${s}&_where=${encodeURIComponent(`userIdQuery=${t}`)}`, n).then(((e) => e.json())).then((async (e) => (e.data && g.loadAddresses(e.data), e))).catch(((e) => m(`GET_ADDRESSES_ERROR: ${e?.message}`))); })); })().then((({ data: e }) => { const t = e.map(((e) => h(e))); document.getElementById('bash-address-list') && (document.getElementById('bash-address-list').innerHTML = t.join('')), $('#back-button-select-address').hasClass('inactive') && $('#back-button-select-address').show(), l(), e.length < 1 && (window.postMessage({ action: 'setDeliveryView', view: 'address-search' }), $('#bash--input-address-search').focus(), $('#back-button-select-address').hide(), $('#back-button-select-address').addClass('inactive')); })).catch(((e) => { throw console.error('ERROR getAddresses', e), new Error('Error getAddresses', e.message); })), '\n <div class="bash--addresses shimmer" id="bash-address-list">\n    Loading addresses...\n  </div>\n  '); const z = ({ label: e, name: t, value: s = '', required: n = !0, type: a = 'text', placeholder: i, autoComplete: o = 'on', maxLength: r, minlength: d, disabled: c = !1, options: l, checked: p, error: h = 'This field is required.' }) => { const m = t.replace(/\s/g, '-'); const v = `<label id="bash--label-${m}" for="bash--input-${m}">${e}</label>`; return `\n<p class="input bash--${a}field-${t.replace(/\s/g, '-')} bash--${a} ${n ? 'required' : 'optional'}">\n  ${e && a !== 'checkbox' ? v : ''}\n  ${(() => { switch (a) { case 'radio': return u({ name: t, options: l }); case 'dropdown': return (({ name: e, disabled: t = !1, options: s, required: n }) => { const a = s.find(((e) => !0 === e.selected)); return `\n  <select \n    name="${e}" \n    ${n ? ' required ' : ''} \n    ${t ? ' disabled ' : ''} \n    id="bash--input-${e}" \n    class="input-large" \n  >\n  ${s.map((({ value: e, label: t, selected: s }, n) => `\n    <option \n    ${n === 0 ? ' disabled ' : ''}\n    ${n !== 0 || a ? '' : ' selected '}\n    ${s ? ' selected ' : ''}\n      value="${e}" \n    >${t}</option>\n    `)).join('')}\n  </select>\n  `; })({ name: t, disabled: c, options: l, required: n }); case 'note': return (({ value: e, name: t }) => `\n  <div class="bash--note-field ${t}">\n  ${e}\n  </div>\n  `)({ name: t, value: s }); case 'checkbox': return (({ name: e, label: t, checked: s, value: n }) => `\n    <label class="tfg-checkbox-label">\n       <input \n        type='checkbox' \n        name="${e}" \n        id="bash--input-${e}"\n        ${s ? "checked='checked'" : ''}\n        value=${n ?? ''}\n      />\n      <span>${t}</span>\n    </label>\n  `)({ name: t, label: e, checked: p }); default: return (({ name: e, value: t = '', required: s = !0, type: n = 'text', placeholder: a, autoComplete: i = 'on', minLength: o = 0, maxLength: r = 0 }) => `\n  <input \n    ${s ? ' required ' : ''}\n    autocomplete="${i}" \n    id="bash--input-${e.replace(/\s/g, '-')}" \n    type="${n}" \n    name="${e}" \n    ${o > 0 ? `minlength="${o}"` : ''}\n    ${r > 0 ? `maxlength="${r}"` : ''}\n    placeholder="${a ?? ''}" \n    class="input-xlarge" \n    value="${t}" \n  />\n`)({ name: t, value: s, required: n, type: a, placeholder: i, autoComplete: o, maxLength: r, minlength: d }); } })()}\n  <span class="bash--field-error">${h}</span>\n</p>  \n`; }; const K = () => (setTimeout((() => { (() => { if (!window.google) return; const e = document.getElementById('bash--input-address-search'); const t = new window.google.maps.places.Autocomplete(e, { componentRestrictions: { country: 'ZA' } }); window.google.maps.event.addListener(t, 'place_changed', (() => { const s = t.getPlace(); const { address_components: n, geometry: a } = s; ((e) => { const { street: t, neighborhood: s, postalCode: n, state: a, city: i, lat: o, lng: r } = e; document.getElementById('bash--address-form').reset(), document.getElementById('bash--input-addressId').value = '', document.getElementById('bash--input-addressName').value = '', document.getElementById('bash--input-number').value = '  ', document.getElementById('bash--input-street').value = t ?? '', document.getElementById('bash--input-neighborhood').value = s ?? '', document.getElementById('bash--input-city').value = i ?? '', document.getElementById('bash--input-postalCode').value = n ?? '', document.getElementById('bash--input-state').value = E(a), document.getElementById('bash--input-lat').value = o || '', document.getElementById('bash--input-lng').value = r || ''; })(((e, t) => { const s = e.find(((e) => e.types.includes('street_number')))?.long_name; const n = e.find(((e) => e.types.includes('route')))?.long_name; const a = e.find(((e) => e.types.includes('sublocality')))?.long_name; const i = e.find(((e) => e.types.includes('locality')))?.long_name; const o = e.find(((e) => e.types.includes('postal_code')))?.long_name; const r = e.find(((e) => e.types.includes('administrative_area_level_1')))?.long_name; const d = { lat: '', lng: '' }; return t && (d.lat = t.location.lat(), d.lng = t.location.lng()), { street: `${s ?? ''} ${n ?? ''}`.trim(), neighborhood: a, city: i, postalCode: o, state: r, ...d }; })(n, a)), window.postMessage({ action: 'setDeliveryView', view: 'address-form' }), e.value = ''; })), e.addEventListener('keyup', B); })(); }), 500), `\n  \n  ${z({ name: 'address-search', placeholder: 'Start typing an address...', autoComplete: 'off' })}\n    <div id="no-address-search-results-notification" class="notification info" >\n      <span class="icon"></span>\n      <div class="notification-content">\n      We could not find your address. \n        <a class="no-results-drop-down" href="" data-view="address-form" id="no-address-search-results">\n          Please click here to enter it manually.\n        </a>\n    </div>\n  `); const H = ({ hasFurn: e }) => `\n  <div class="bash--delivery-container" id="bash--delivery-container" data-view="select-address">\n    <div id="bash--shipping-messages">\n      <div id="bash-alert-container"></div>\n      \n  <div id="tfg-custom-tvrica-msg" class="tfg-custom-msg">\n    <p class="tfg-custom-icon"></p>\n    <p class="tfg-custom-text">\n      You can't collect this order in store because your cart contains items \n      which require either RICA or TV License validation.\n    </p>\n  </div>\n\n      \n  <div id="tfg-custom-mixed-msg" class="tfg-custom-msg">\n    <p class="tfg-custom-icon"></p>\n    <p class="tfg-custom-text">\n      We'll ship your furniture and other items in your cart to the selected address. \n      Only the furniture delivery fee will apply.\n      </p>\n  </div>\n\n       \n \n<div id="bash-delivery-error-container"   >\n</div>\n    </div>\n   <form id="bash--delivery-form" name="bash--delivery-form" method="post">\n\n    <section class="bash--delivery-view" data-section="select-address">\n    <div class="bash--heading">\n        <h2>Delivery address</h2>\n        <a href="#" data-view="address-search">Add address</a>\n      </div>\n      ${G()}\n    </section>\n\n    <section id="bash-delivery-options" class="shipping-method bash--delivery-view" data-section="select-address">\n      <hr>\n      <div class="bash--heading sub-heading">\n        <h3>Delivery options</h3>\n        ${e ? '\n<a \n  href="http://image.tfgmedia.co.za/image/1/process/500x790?source=http://cdn.tfgmedia.co.za/15/Marketing/HTMLPages/Furniture_Delivery_Fees_tab_image.jpg"\n  class="furniture-fees-link" \n  target="_blank"\n>\n  Furniture delivery costs\n</a>\n' : ''}\n      </div>\n      \n  <label class="bash--delivery-option-display" >\n  ${u({ name: 'delivery-option', options: [{ checked: !0, value: !0 }] })}\n   \n   <div id="bash--delivery-option-text" class="bash--delivery-option-text">\n      <span class="normal-delivery">Deliver within 3 - 5 days</span>\n   </div>\n\n  <div id="bash--delivery-fee" class="bash--delivery-fee">\n    R50\n  </div>\n</label>\n  \n      <button \n        class="submit btn-go-to-payment btn btn-large btn-success"\n        id="btn-save-delivery" \n        type="submit">\n          Go to payment\n      </button>\n    </section>\n   </form>\n\n    <section class="bash--delivery-view" data-section="address-search">\n      <div class="bash--heading">\n        <h3>Add a new delivery address</h3>\n        <a href='#' data-view='select-address' id='back-button-select-address'>&lt; Back</a>\n      </div>\n      <div class="address-search-field-container" id="address-search-field-container">\n          ${K()} \n      </div>\n      <p style="font-size: 12px; margin: 16px 0" id="type-your-address-above">\n        Type your address above or \n        <a \n          href="" id="link-manual-address-entry"\n          data-view="address-form"\n          onClick="document.getElementById('bash--input-street').focus()"\n          style="text-decoration: underline" \n        >enter it manually</a>.\n      </p>\n    </section>\n    \n    <section class="bash--delivery-view" data-section="address-form">\n       <div class="bash--heading">\n        <h3>Delivery address</h3>\n        <a href="#" class="back-button--search" data-view="address-search">&lt; Back</a>\n        <a href="#" class="back-button--select" data-view="select-address">&lt; Back</a>\n      </div>\n      \n  <form id="bash--address-form" method="post">\n    ${[{ name: 'addressId', type: 'hidden', value: '', required: !1 }, { name: 'addressName', type: 'hidden', value: '', required: !1, maxLength: 50 }, { name: 'lat', required: !1, type: 'hidden', value: '' }, { name: 'lng', required: !1, type: 'hidden', value: '' }, { name: 'street', label: 'Street address', required: !0, value: '' }, { name: 'addressType', label: 'Address type', required: !0, type: 'radio', options: [{ value: 'residential', label: 'Residential', checked: !0 }, { value: 'business', label: 'Business' }] }, { name: 'number', required: !1, value: '  ', type: 'hidden' }, { name: 'companyBuilding', label: 'Building/Complex and number', required: !1, value: '', maxLength: 100 }, { name: 'neighborhood', label: 'Suburb', value: '', maxLength: 750 }, { name: 'city', label: 'City', required: !0, value: '', maxLength: 750 }, { name: 'postalCode', label: 'Postal code', value: '', type: 'tel', minlength: 4, maxLength: 4 }, { type: 'note', required: !1, name: 'suburb-postal-reminder', value: 'Make sure to specify the correct Suburb and Postal code so we can easily find your address.' }, { name: 'state', label: 'Province', type: 'dropdown', options: [{ value: '', label: 'Select' }, { value: 'EC', label: 'Eastern Cape' }, { value: 'FS', label: 'Free State' }, { value: 'GP', label: 'Gauteng' }, { value: 'KZN', label: 'KwaZulu-Natal' }, { value: 'LP', label: 'Limpopo' }, { value: 'MP', label: 'Mpumalanga' }, { value: 'NC', label: 'Northern Cape' }, { value: 'NW', label: 'North West' }, { value: 'WC', label: 'Western Cape' }] }, { type: 'note', required: !1, name: 'country-display', label: 'Country', value: 'South Africa' }, { type: 'hidden', required: !0, name: 'country', value: 'ZAF' }, { name: 'receiverName', label: 'Recipient’s name', required: !0, value: N() }, { name: 'complement', label: 'Recipient’s mobile number', required: !0, value: d(), type: 'tel', helperText: 'We send shipping updates to this number.' }].map(((e) => z(e))).join('')}\n\n    <button \n      class="submit btn-go-to-payment btn btn-large btn-success"\n      id="btn-save-address" \n      type="submit"\n    >\n      Save address\n    </button>\n  </form>\n  \n  \n    </section>\n    \n  </div>`; const Q = ({ hasFurn: e, hasTV: t, hasSim: s }) => { const n = `\n    <div id="tv-license-form">\n      <hr>\n      <div class="bash--heading sub-heading heading-with-description">\n        <h3>TV license information needed</h3>\n        <p class="tfg-custom-subtitle">Please provide your ID number to validate your TV Licence.</p>\n      </div>\n      \n    ${z({ name: 'tv_tvID', label: 'SA ID number', required: !0, value: '' })}\n  \n    </div>\n  `; const a = `\n    <div id="rica-form">\n      <hr>\n      <div class="bash--heading sub-heading heading-with-description">\n        <h3>Rica information required</h3>\n        <p class="tfg-custom-subtitle">\n          To RICA your SIM card, provide your SA ID (or foreign passport) number and your address as\n          it appears on a valid proof of residence.\n        </p> \n      </div>\n        ${(() => { const { shippingData: { selectedAddress: e } } = window.vtexjs.checkout.orderForm; const t = [{ name: 'rica_fullName', label: 'Full name and surname', required: !0, value: N() || '' }, { name: 'rica_streetAddress', label: 'Street address', required: !0, value: e?.street || '' }, { name: 'rica_suburb', label: 'Suburb', value: e?.neighborhood || '' }, { name: 'rica_city', label: 'City', required: !0, value: e?.city || '' }, { name: 'rica_postalCode', label: 'Postal code', value: e?.postalCode || '', type: 'tel', minlength: 4, maxLength: 4 }, { name: 'rica_province', label: 'Province', type: 'dropdown', options: [{ value: '', label: 'Select', disabled: !0 }, { value: 'EC', label: 'Eastern Cape' }, { value: 'FS', label: 'Free State' }, { value: 'GP', label: 'Gauteng' }, { value: 'KZN', label: 'KwaZulu-Natal' }, { value: 'LP', label: 'Limpopo' }, { value: 'MP', label: 'Mpumalanga' }, { value: 'NC', label: 'Northern Cape' }, { value: 'NW', label: 'North West' }, { value: 'WC', label: 'Western Cape' }] }, { type: 'note', required: !1, name: 'rica-country-display', label: 'Country', value: 'South Africa' }, { type: 'hidden', required: !0, name: 'country', value: 'ZAF' }]; return `\n    ${[{ name: 'rica_idOrPassport', label: 'ID or Passport number', required: !0, value: '' }, { name: 'rica_sameAddress', label: 'Residential address the same as delivery address', type: 'checkbox', checked: !0, required: !1 }].map(((e) => z(e))).join('')}\n    <div class="rica-conditional-fields hide">\n    ${t.map(((e) => z(e))).join('')}\n    </div>\n  `; })()}\n    </div>\n    `; return `\n  <section class="bash--extra-fields bash--delivery-view" data-section="select-address">\n    ${e ? '\n    <div id="furniture-form">\n      <hr>\n      <div class="bash--heading sub-heading heading-with-description">\n        <h3>Furniture delivery</h3>\n          Please ensure that there is sufficient space to receive your goods and keep in mind \n          that our couriers aren\'t able to hoist goods onto balconies.\n      </div>\n    </div>\n  ' : ''}\n    ${t ? n : ''}\n    ${s ? a : ''}\n  </section>`; }; const Y = (() => { const e = { view: 'list', hasFurn: !1, hasTVs: !1, hasSim: !1 }; const i = () => { if (!$('#bash--delivery-container').length) { if (window.vtexjs.checkout.orderForm) { const t = window.vtexjs.checkout.orderForm?.items; const { hasFurniture: s, hasTVs: n, hasSimCards: a } = c(t); e.hasFurn = s, e.hasTVs = n, e.hasSim = a; } $('.shipping-data .box-step').append(H({ hasFurn: e.hasFurn })), (e.hasFurn || e.hasSim || e.hasTVs) && ($('#bash-delivery-options').before(Q({ hasFurn: e.hasFurn, hasSim: e.hasSim, hasTV: e.hasTVs })), e.hasSim && _(), e.hasTVs && (async () => { const e = x(a); T(e, I, 'tv'); })()), $('select, input').on('invalid', (function () { const e = this; $(e)[0].setCustomValidity(' '), $(e).parents('form').addClass('show-form-errors'), $(e).off('change keyUp'), $(e).on('change keyUp', (() => { $(e)[0].setCustomValidity(''); })); })); } }; return $(window).unload((() => { f(); })), $(document).ready((() => { window.vtexjs.checkout.getOrderForm().then((() => { f(), window.location.hash === t ? (i(), $('.bash--delivery-container.hide').removeClass('hide'), $('.bash--delivery-container').css('display', 'flex')) : $('.bash--delivery-container:not(.hide)').length && ($('.bash--delivery-container:not(.hide)').addClass('hide'), $('.bash--delivery-container').css('display', 'none')); })); })), $(window).on('hashchange', (() => { window.location.hash === t ? (i(), q(), $('.bash--delivery-container').css('display', 'flex'), $('.bash--delivery-container.hide').removeClass('hide')) : $('.bash--delivery-container:not(.hide)').length && ($('.bash--delivery-container:not(.hide)').addClass('hide'), $('.bash--delivery-container').css('display', 'none')); })), $(window).on('orderFormUpdated.vtex', (() => { const e = window.vtexjs.checkout.orderForm?.items; const o = window.vtexjs.checkout.orderForm.shippingData?.address?.addressType; const { hasTVs: r, hasSimCards: d, hasFurnitureMixed: l } = c(e); const { messages: u } = window.vtexjs.checkout.orderForm; if (window.location.hash === t) { const e = u.filter(((e) => e.status === 'error')); e && R(e); } if (o === 'search') { if (r || d || l) return window.location.hash !== t && (window.location.hash = t), void setTimeout((() => document.getElementById('shipping-option-delivery')?.click()), 2e3); $('#shipping-data:not(collection-active)').addClass('collection-active'), $('.delivery-active').removeClass('delivery-active'); } else i(), $('#shipping-data:not(delivery-active)').addClass('delivery-active'), $('.collection-active').removeClass('collection-active'); q(), (() => { if (!window.vtexjs.checkout.orderForm.totalizers) return; const { value: e } = window.vtexjs.checkout.orderForm.totalizers.find(((e) => e.id === 'Shipping')) || { value: 5e3 }; let t = 'Free'; e > 0 && (t = `R${(e / 100).toFixed(2).replace('.00', '')}`), $('#bash--delivery-fee').length > 0 && (document.getElementById('bash--delivery-fee').innerHTML = t); })(), window.location.hash !== s || (() => { const e = window.vtexjs.checkout.orderForm?.items; const { hasTVs: t, hasSimCards: s } = c(e); let i = !0; if (t && (x(a).tvID || (i = !1)), s) { const e = x(n); e.idOrPassport && e.streetAddress && e.postalCode || (i = !1); } return i; })() || (window.location.hash = t); })), $(document).on('click', 'a[data-view]', (function (e) { e.preventDefault(); const t = $(this).data('view'); const s = decodeURIComponent($(this).data('content')); window.postMessage({ action: 'setDeliveryView', view: t, content: s }); })), $(document).on('change', 'input[type="radio"][name="selected-address"]', (function () { const e = (t = $(this).parents('.bash--address-listing').data('address'), JSON.parse(decodeURIComponent(t))); let t; document.forms['bash--delivery-form'] && (document.forms['bash--delivery-form'].reset(), $('#bash--input-lat').val(''), $('#bash--input-lng').val(''), document.forms['bash--delivery-form'].classList.remove('show-form-errors')), w(e.addressName).then(((t) => { V(t || e, { validateExtraFields: !1 }), $('input[type="radio"][name="selected-address"]:checked').attr('checked', !1), $(this).attr('checked', !0); })); })), $(document).on('change', '#bash--input-rica_sameAddress', (function () { this.checked ? $('.rica-conditional-fields').slideUp((() => _())) : ((() => { const e = $('#bash--input-rica_idOrPassport').val(); T({ idOrPassport: e ?? '', fullName: '', streetAddress: '', suburb: '', city: '', postalCode: '', province: '' }, F, 'rica_', !0); })(), $('.rica-conditional-fields').slideDown((() => $('#bash--input-rica_fullName').focus()))); })), $(document).on('change', 'input[name="addressType"]', (function () { $(this).is(':checked') && ($(this).val() === 'business' ? $('#bash--label-companyBuilding').text('Business name') : $('#bash--label-companyBuilding').text('Building/Complex and number')); })), $(document).on('click', '#shipping-option-pickup-in-point, #shipping-option-delivery', (function () { $(this).attr('id') === 'shipping-option-pickup-in-point' ? $('#bash--delivery-container').hide() : $('#bash--delivery-container').show(); })), $(document).on('submit', '#bash--address-form', M), $(document).on('submit', '#bash--delivery-form', L), $(document).on('click', '.remove-cart-item', (function (e) { let t; e.preventDefault(), t = $(this).data('index'), window.vtexjs.checkout.updateItems([{ index: `${t}`, quantity: 0 }]).done((() => { l(); })); })), window.addEventListener('message', ((e) => { const { data: t } = e; if (t && t.action) if (t.action === 'setDeliveryView') { if (document.querySelector('.bash--delivery-container').setAttribute('data-view', t.view), (t.view === 'address-form' || t.view === 'address-edit') && (Z('#bash--input-complement'), t.content)) { const e = JSON.parse(decodeURIComponent($(`#${t.content}`).data('address'))); j(e); } } else console.error('Unknown action', t.action); })), { state: e, init: () => { } }; })(); const X = (() => { const e = { showFurnitureForm: !1, showTVIDForm: !1, showRICAForm: !1, showTVorRICAMsg: !1, showMixedProductsMsg: !1, runningObserver: !1 }; const t = () => { setTimeout((() => { (() => { if (window.vtexjs.checkout.orderForm) { const { items: t } = window.vtexjs.checkout.orderForm; const { hasFurniture: s, hasTVs: n, hasSimCards: a, categories: i } = c(t); e.showTVIDForm = n, e.showRICAForm = a, e.showTVorRICAMsg = e.showTVIDForm || e.showRICAForm, e.showMixedProductsMsg = t.length > 1 && s && !i.every(((e) => e === r)); } })(), e.showFurnitureForm ? $('div.subheader').css('display', 'none') : $('div.subheader').css('display', 'block'); }), 500); }; return $(document).ready((() => { t(); })), $(window).on('hashchange orderFormUpdated.vtex', (() => { t(); })), $(document).on('click', '#shipping-data .btn-link.vtex-omnishipping-1-x-btnDelivery', (() => { t(); })), { state: e, setView: (e) => { document.body.setAttribute('data-delivery-view', e); }, showCustomSections: () => { const t = $('#tfg-custom-tvrica-msg').length > 0; const s = $('#tfg-custom-mixed-msg').length > 0; let n = !1; let a; (e.showTVorRICAMsg || e.showMixedProductsMsg) && ($('.vtex-omnishipping-1-x-deliveryChannelsWrapper.custom-disabled').length < 1 && ($('#shipping-option-delivery').trigger('click'), $('.vtex-omnishipping-1-x-deliveryChannelsWrapper').addClass('custom-disabled')), e.showTVorRICAMsg && !t && ($('.vtex-omnishipping-1-x-addressFormPart1').prepend('\n  <div id="tfg-custom-tvrica-msg" class="tfg-custom-msg">\n    <p class="tfg-custom-icon"></p>\n    <p class="tfg-custom-text">\n      You can\'t collect this order in store because your cart contains items \n      which require either RICA or TV License validation.\n    </p>\n  </div>\n'), n = !0), e.showMixedProductsMsg && !s && ($('.vtex-omnishipping-1-x-addressFormPart1').prepend('\n  <div id="tfg-custom-mixed-msg" class="tfg-custom-msg">\n    <p class="tfg-custom-icon"></p>\n    <p class="tfg-custom-text">\n      We\'ll ship your furniture and other items in your cart to the selected address. \n      Only the furniture delivery fee will apply.\n      </p>\n  </div>\n'), n = !0)), n && (a = '.tfg-custom-step', $(a).addClass('custom-step-border'), $(a).last().addClass('last-custom-step-border')); }, init: () => { } }; })(); const ee = document.createElement('script'); ee.setAttribute('src', 'https://unpkg.com/penpal@^6/dist/penpal.min.js'), document.head.appendChild(ee), X.init(), J.init(), Y.init();
})();
