(() => { "use strict"; const e = () => '\n  <p id="box-pickup-complement" \n  class="input custom-field-complement tfg-custom-addressForm">\n    <label>Mobile number</label>\n    <input \n      id="custom-pickup-complement" \n      class="input-xlarge success" \n      type="tel" \n      name="complement" \n      placeholder="" \n    />\n  </p>', t = "#/shipping", s = "#/payment", n = "search", a = "ricafields", o = "tvfields", i = "pickup", r = window.location.host.includes("bash.com") ? "https://store-api.www.bash.com/custom-api/" : `${window.location.protocol}//${window.location.host}/custom-api/`, d = "1169288799", c = () => window.vtexjs.checkout.orderForm?.shippingData?.address?.complement || window.vtexjs.checkout.orderForm?.clientProfileData?.phone || document?.getElementById("client-phone")?.value, l = e => { const t = [d], s = ["938942995"], n = ["24833302"], a = []; let o = !1, i = !1, r = !1, c = !1; return e.forEach((e => { const d = e.productCategoryIds.split("/"); a.push(d), d.forEach((e => { e && (s.includes(e) && (o = !0), n.includes(e) && (i = !0), t.includes(e) && (r = !0)) })) })), c = e.length > 1 && r && !a.every((e => e === d)), { hasFurniture: r, hasSimCards: i, hasTVs: o, hasFurnitureMixed: c, categories: a } }, u = () => { $(".shimmer").removeClass("shimmer") }, p = () => { const e = Array.from($("form.form-step.box-edit > :invalid, .error")); e.sort(((e, t) => e.getBoundingClientRect().top - t.getBoundingClientRect().top)), e?.[0]?.scrollIntoView({ block: "center", behavior: "smooth" }) }, h = ({ name: e, options: t = [] }) => `\n  \n  <div class="bash--radio-options">\n  ${t.map((({ value: t, label: s, checked: n = !1, disabled: a = !1 }) => `\n      <label class="bash--radio-option" id="radio-label-${e}-${t}">\n        <input type="radio" \n          ${n ? "checked='checked'" : ""} \n          ${a ? "disabled='disabled'" : ""} \n          value="${t ?? ""}" \n          name="${e}" \n          id="radio-${e}-${t}"\n        />\n          <span class="radio-icon"></span> \n          ${s ? `<span class="radio-label">${s}</span>` : ""}\n      </label>\n    `)).join("")}\n   \n  </div>\n  `, m = (e, t) => JSON.stringify({ street: e.street, neighborhood: e.neighborhood, city: e.city, postalCode: e.postalCode }) === JSON.stringify({ street: t.street, neighborhood: t.neighborhood, city: t.city, postalCode: t.postalCode }), v = e => { if (!e) return ""; const { number: t, street: s, neighborhood: n, postalCode: a, city: o, receiverName: i, addressName: r, complement: d } = e, c = [`${t ? `${t} ` : ""}${s}`, n ?? o, a].join(", ").trim(), l = [i, Z(W(d))].join(" - "), u = window?.vtexjs?.checkout?.orderForm?.shippingData?.address; return `\n<label id="address-${r}" class="bash--address-listing" data-address="${encodeURIComponent(JSON.stringify(e))}">\n  <div class="address-radio">\n  ${h({ name: "selected-address", options: [{ checked: !!u ?? m(e, u), value: r }] })}\n  </div>\n  <div class="address-text">\n    <div>${c}</div>    \n    <div>${l}</div>  \n  </div>\n  <div class="address-edit">\n    <a href="#" data-view="address-edit" data-content="address-${r}">\n      Edit\n    </a>\n  </div>\n</label>\n` }, g = e => { throw console.error("ERROR", e), new Error(e) }, b = ({ cookie: e, cache: t, json: s }) => { const n = new Headers; return e && n.append("Cookie", document?.cookie), t && n.append("Cache-Control", "no-cache"), s && n.append("Content-type", "application/json"), n }, y = new class { constructor() { this.indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB || window.shimIndexedDB, this.checkoutDB = indexedDB.open("checkoutDB", 1.2), this.checkoutDB.onerror = e => { throw console.error("CheckoutDB Error", { event: e }), new Error("Could not load checkoutDB") }, this.checkoutDB.onupgradeneeded = () => { const e = this.checkoutDB.result.createObjectStore("addresses", { keyPath: "addressName" }); e.createIndex("address_street", ["street"], { unique: !1 }), e.createIndex("address_addressName", ["addressName"], { unique: !0 }), e.createIndex("address_street_suburb_city_postal", ["street", "neighborhood", "city", "postalCode"], { unique: !0 }) }, this.checkoutDB.onsuccess = () => { const e = this.checkoutDB.result.transaction("addresses", "readwrite"); this.addresses = e.objectStore("addresses"), e.oncomplete = () => { } } } store() { return this.checkoutDB.result.transaction("addresses", "readwrite").objectStore("addresses") } loadAddresses(e) { const t = e.map((e => this.addOrUpdateAddress(e))); return Promise.all(t).then((e => e)) } addOrUpdateAddress(e) { const t = this; return new Promise(((s, n) => { const a = t.store().put(e); a.onsuccess = () => { s({ success: !0, addressId: a.result }) }, a.onerror = e => { n(new Error({ sucess: !1, error: e?.target?.error })) } })) } getAddresses() { const e = this; return new Promise((t => { const s = e.store().getAll(); s.onsuccess = () => t(s.result), s.onerror = () => { console.error("Something wrong with getAddresses ? ..."), t([]) } })) } getAddress(e) { const t = this; return new Promise((s => { const n = t.store().get(e); n.onsuccess = () => s(n.result), n.onerror = () => { console.error("Something wrong with getAddress ? ..."), s([]) } })) } deleteAddress(e) { const t = this.addresses.delete(e); t.onsuccess = () => t.result } clearData() { const e = this; return new Promise((t => { const s = e.store().clear(); s.onsuccess = () => t(s.result), s.onerror = () => { console.error("Something wrong with clearData ? ..."), t([]) } })) } }, w = e => { let t = $(`#address-${e.addressName}`); t.length ? (t.after(v(e)), t.remove(), t = null) : $("#bash-address-list").append(v(e)), $('input[type="radio"][name="selected-address"]:checked').attr("checked", !1), $(`input[type="radio"][name="selected-address"][value="${e.addressName}"]`).attr("checked", !0) }, f = async e => { if (!e.addressName) { const t = e.street.replace(/[^a-zA-Z0-9]/g, " ").trim().replace(/\s/g, "-").toLowerCase(); e.addressName = `${Date.now()}-${t}`.substring(0, 50) } e.addressId || (e.addressId = e.addressName), y.addOrUpdateAddress(e).then((() => w(e))), (async e => { let t; const { email: s } = window.vtexjs.checkout.orderForm.clientProfileData; if (!e) return Promise.reject(new Error("No address provided.")); const n = e.addressName ? await (async (e, t) => { let s = {}; const n = { headers: b({ cookie: !0, cache: !0, json: !1 }), credentials: "include" }, a = await fetch(`${r}masterdata/addresses/?_fields=id&_where=addressName=${e}&timestamp=${Date.now()}`, n).then((e => e.json())).catch((e => g(`GET_ADDRESS_ERROR: ${e?.message}`))); return a && !a.error && a.data && a.data.length > 0 && ([s] = a.data), s })(e.addressName) : {}; t = n?.id ? `${r}masterdata/address/${n.id}` : `${r}masterdata/addresses`, e.complement = e.complement || c(); const a = { userId: s, ...e }; n.id || (a.addressName = e.addressId || `address-${Date.now()}`); const o = { method: "PATCH", headers: b({ cookie: !0, cache: !0, json: !0 }), body: JSON.stringify(a), credentials: "include" }; await fetch(t, o).then((e => 204 !== e.status ? e.json() : e)).then((e => e)).catch((e => g(`SAVE_ADDRESS_ERROR: ${e?.message}`))) })(e) }, k = async e => y.getAddress(e), x = async () => y.clearData(), C = async (e, t, s = !1) => { const { orderFormId: n } = window.vtexjs.checkout.orderForm, a = `/api/checkout/pub/orderForm/${n}/customData/${e}`, o = JSON.stringify({ ...t, ...s && { sameAddress: new Boolean(t.sameAddress) } }); return fetch(a, { method: "PUT", headers: { "Content-Type": "application/json" }, body: o }) }, F = e => { const t = window?.vtexjs?.checkout?.orderForm?.customData; let s = {}; return t && t.customApps && t.customApps.length > 0 && t.customApps.forEach((t => { t.id === e && (s = t.fields) })), s }, I = ["receiverName", "complement", "street", "neighborhood", "state", "city", "country", "postalCode"], D = ["idOrPassport", "sameAddress", "fullName", "streetAddress", "suburb", "city", "postalCode", "province"], S = ["tvID"], A = ["residential", "inStore", "commercial", "giftRegistry", "pickup", "search"], E = () => { document.querySelector(".bash--delivery-container").classList.add("shimmer") }, j = () => { document.querySelector(".delivery-group-content")?.classList?.add("shimmer"), document.querySelector(".vtex-omnishipping-1-x-ask")?.classList?.add("shimmer") }, B = e => { switch (e) { case "Select": return ""; case "Western Cape": return "WC"; case "Easter Cape": return "EC"; case "Gauteng": return "GP"; case "KwaZulu-Natal": case "KwaZulu Natal": return "KZN"; case "Northern Cape": return "NC"; case "Limpopo": return "LP"; case "Mpumalanga": return "MP"; case "North West": return "NW"; case "Freestate": case "Free State": return "FS"; default: return e } }, N = () => { const e = window?.vtexjs?.checkout?.orderForm?.shippingData?.address?.receiverName, t = window?.vtexjs?.checkout?.orderForm?.clientProfileData?.firstName, s = window?.vtexjs?.checkout?.orderForm?.clientProfileData?.lastName, n = `${t ?? ""} ${s ?? ""}`.trim(); return e || document.getElementById("client-first-name")?.value || n }, T = e => { const { number: t, street: s, companyBuilding: n, neighborhood: a, postalCode: o, state: i, city: r, receiverName: d, complement: c, id: l, addressId: u, addressName: p, geoCoordinate: h } = e; let m, v; document.getElementById("bash--address-form").reset(); try { [m, v] = JSON.parse(JSON.stringify(h)) } catch (t) { console.warn("Could not parse geo coords", { address: e, geoCoordinate: h }) } d && (document.getElementById("bash--input-receiverName").value = d ?? ""), c && (document.getElementById("bash--input-complement").value = c ?? ""), (l || u) && (document.getElementById("bash--input-addressId").value = l || u), p && (document.getElementById("bash--input-addressName").value = p); const g = `${t ? `${t} ` : ""}${s}`.replace(`, ${n}`, ""); document.getElementById("bash--input-number").value = "", document.getElementById("bash--input-street").value = g || "", document.getElementById("bash--input-companyBuilding").value = n || "", document.getElementById("bash--input-neighborhood").value = a || "", document.getElementById("bash--input-city").value = r || "", document.getElementById("bash--input-postalCode").value = o || "", document.getElementById("bash--input-state").value = B(i), document.getElementById("bash--input-lat").value = m || "", document.getElementById("bash--input-lng").value = v || "", $(":invalid").trigger("change") }, R = e => { setTimeout((() => { const t = document.querySelectorAll(".pac-container"), s = document.querySelectorAll(".pac-container[style*='display: none']"); t?.length === s?.length && e.target?.value?.length > 3 ? $("#address-search-field-container:not(.no-results)").addClass("no-results") : $("#address-search-field-container.no-results").removeClass("no-results") }), 250) }, _ = (e, t, s = "", n = !1) => { if (e) { for (let a = 0; a < t.length; a++) { const o = `bash--input-${s}${t[a]}`; !document.getElementById(o) || !e[t[a]] && !n || document.getElementById(o).value && !n || (document.getElementById(o).value = e[t[a]]) } $(":invalid").trigger("change") } }, O = () => { const { address: e } = window.vtexjs.checkout.orderForm.shippingData; if (document.getElementById("bash--input-rica_streetAddress")?.value || !e) return; e.fullName = N(), e.streetAddress = e.street, e.suburb = e.neighborhood, e.province = e.state, _(e, D, "rica_"); const t = F(a); t.streetAddress && _(t, D, "rica_", !0) }, P = (e, t = !0) => { const { items: s } = window.vtexjs.checkout.orderForm, { hasTVs: n, hasSimCards: a } = l(s); let o = []; const i = []; o = [...I], n && t && (o = [...o, ...S]), a && t && (o = [...o, ...D]); for (let t = 0; t < o.length; t++)e[o[t]] || i.push(o[t]); return { isValid: !i.length, invalidFields: i } }, M = () => { const { items: e } = window.vtexjs.checkout.orderForm, { hasTVs: t, hasSimCards: s, hasFurnitureMixed: n } = l(e), a = "#shipping-data"; t ? $(`${a}:not(.has-tv)`).addClass("has-tv") : $(`${a}.has-tv`).removeClass("has-tv"), s ? $(`${a}:not(.has-rica)`).addClass("has-rica") : $(`${a}.has-rica`).removeClass("has-rica"), n ? $(`${a}:not(.has-furniture-mixed)`).addClass("has-furniture-mixed") : $(`${a}.has-furniture-mixed`).removeClass("has-furniture-mixed") }, q = (e = []) => { if ($("#bash-delivery-error-container").length < 1) return; const t = e.length > 0 ? e.map((e => (({ text: e, fields: t }) => { if (!t.itemIndex) return ""; const s = window.vtexjs.checkout?.orderForm.items?.[t.itemIndex]; if (!s) return ""; const n = s?.imageUrl; return ` \n<div id="bash-delivery-error" class="notification error" alt="${t?.skuName ?? ""}" >\n   \x3c!---<div class="icon"></div>---\x3e\n   ${n ? `<img src="${n}" style=" float: right; " />` : ""}\n   <div class="notification-content">\n      <h3>Address error ${t?.skuName ? `- ${t?.skuName}` : ""}</h3>\n      <p>${e}</p>\n      <p>Check the postal code of your address, or \n      <a href="#" \n        class="remove-cart-item"\n        style="color: white; text-decoration: underline"\n        data-index="${t.itemIndex}">remove this item from your cart</a>.\n      </p>\n   </div>  \n</div>  \n` })(e))) : ""; $("#bash-delivery-error-container").html(t), e.length > 0 && $("html, body").animate({ scrollTop: $("#bash-delivery-error-container").offset().top }, 400) }, V = (e, t = { validateExtraFields: !0 }) => { const { validateExtraFields: s } = t, { items: n } = window.vtexjs.checkout.orderForm, { hasTVs: a, hasSimCards: o } = l(n); a && _(e, S, "tv_"), o && O(); const { isValid: i, invalidFields: r } = P(e, s); if (!i) return T(e), $("#bash--address-form").addClass("show-form-errors"), s && $("#bash--delivery-form")?.addClass("show-form-errors"), $(`#bash--input-${r[0]}`).focus(), I.includes(r[0]) && window.postMessage({ action: "setDeliveryView", view: "address-edit" }), { success: !1, error: "Invalid address details." }; "business" === e.addressType && (e.addressType = "commercial"), A.includes(e.addressType) || (e.addressType = "residential"), e.number && (e.street = `${e.number} ${e.street}`, e.number = ""), e.country = "ZAF"; const { shippingData: d } = window?.vtexjs?.checkout?.orderForm; return d.address = e, d.selectedAddresses = [e], e.companyBuilding && !d.address.street.includes(`, ${e.companyBuilding}`) && (d.address.street = `${e.street}, ${e.companyBuilding}`), d.selectedAddresses[0] = d.address, E(), window.vtexjs.checkout.sendAttachment("shippingData", d).then((t => { const { messages: s } = t, n = s.filter((e => "error" === e.status)); return n.length > 0 ? (q(n), window.postMessage({ action: "setDeliveryView", view: "address-form" }), { success: !1, errors: n }) : (e.addressName && w(e), { success: !0 }) })).done((() => u())) }, L = async e => { e.preventDefault(), $("select").change(); const t = document.forms["bash--address-form"], s = $("#bash--input-addressName").val(), n = ["addressId", "addressName", "addressType", "receiverName", "postalCode", "city", "state", "street", "neighborhood", "complement", "companyBuilding", "lat", "lng"], a = { isDisposable: !1, reference: null, ...await k(s), country: "ZAF", number: "" }; for (let e = 0; e < n.length; e++)a[n[e]] = t[n[e]]?.value || null; a.addressName = a.addressName || a.addressId, a.addressId = a.addressId || a.addressName, a.geoCoordinate = [parseFloat(a.lat) || "", parseFloat(a.lng) || ""], a.geoCoordinates = [parseFloat(a.lat) || "", parseFloat(a.lng) || ""]; const o = a, { isValid: i, invalidFields: r } = P(a, !1); if (!i) return console.error({ invalidFields: r }), $("#bash--address-form").addClass("show-form-errors"), $(`#bash--input-${r[0]}`).focus(), void (I.includes(r[0]) && window.postMessage({ action: "setDeliveryView", view: "address-form" })); const d = await V(o, { validateExtraFields: !1 }), { success: c } = d; c ? (await f(a), window.postMessage({ action: "setDeliveryView", view: "select-address" }), (() => { $(".alert-container").addClass("show"), $(".alert-container").slideDown(); const e = $('[data-view="address-form"]').length > 0 ? "Address added" : "Address updated"; $("#bash-alert-container").html((({ text: e }) => `<div class='alert-container'>\n      <p>${e}</p>\n    </div>\n  `)({ text: e })), setTimeout((() => { $(".alert-container").slideUp() }), 5e3) })()) : console.error("Set address error", { setAddressResponse: d }) }, U = async e => { e.preventDefault(); const { items: t } = window.vtexjs.checkout.orderForm, { address: n } = window.vtexjs.checkout.orderForm.shippingData, { hasTVs: i, hasSimCards: r } = l(t); $("select").change(); let d = {}; const c = "[name='selected-address']:checked"; if ($(c).length < 1) return void $("html, body").animate({ scrollTop: $("#bash--delivery-form").offset().top }, 400); E(); const p = await k($(c).val()); d = { ...n, ...p }; const { success: h } = await V(d, { validateExtraFields: !1 }); if (!h) return console.error("Delivery Form - Address Validation error"), void u(); const m = {}, v = {}; if (r) { const e = D; for (let t = 0; t < e.length; t++) { if ("sameAddress" === e[t]) { const s = $(`#bash--input-${e[t]}`).is(":checked"); m[e[t]] = s } m[e[t]] = $(`#bash--input-rica_${e[t]}`).val() || "" } const t = await C(a, m, !0); console.info({ ricaDataSent: t }) } if (i) { const e = S; for (let t = 0; t < e.length; t++)n[e[t]] || (d[e[t]] = $(`#bash--input-tv_${e[t]}`).val()), v[e[t]] = $(`#bash--input-tv_${e[t]}`).val() || ""; const t = await C(o, v); console.info({ tvDataSent: t }) } await f(d), $(".bash--delivery-container").css("display", "none"), window.location.hash = s, u() }, W = e => { if (!e) return ""; let t = e.replace(/\s/g, ""); return 9 === t.length && "0" !== t[0] && (t = `0${t}`), t }, Z = e => [e.slice(0, 3), e.slice(3, 6), e.slice(6)].join(" "), J = (e, t) => { if ("0" === (e = e.replace(/[^0-9+*#]+/g, "").trim())[0]) { if (e.length >= 6) { const s = [e.slice(0, 3), e.slice(3, 6), e.slice(6)].join(" "); return t ? s.trim() : s } if (e.length >= 3) { const s = [e.slice(0, 3), e.slice(3)].join(" "); return t ? s.trim() : s } } else { if (e.length >= 5) { const s = [e.slice(0, 2), e.slice(2, 5), e.slice(5)].join(" "); return t ? s.trim() : s } if (e.length >= 2) { const s = [e.slice(0, 2), e.slice(2)].join(" "); return t ? s.trim() : s } } return t ? e.trim() : e }, G = e => { const t = document.querySelector(e); t && (t.setAttribute("maxlength", 12), t.value = J(t.value), $(document).off("keyup", e), $(document).on("keyup", e, (function (e) { const t = $(this), s = t.val().replace(/[^0-9+*#]+/g, ""), n = 8 === e.keyCode, a = J(s, n); t.parent(".text").removeClass("error"), t.parent(".text").find("span.error").hide(), t.val(a) }))) }, z = ({ eventCategory: e = "Checkout_UserErrors", action: t = "", label: s = "", description: n = "", value: a }) => { const o = () => { window.dataLayer.push({ event: "gaEvent", eventCategory: e, eventLabel: s, eventAction: t, eventValue: a, eventDescription: n }) }; if (!window.dataLayer) return $(window).off("gtm.load"), void $(window).on("gtm.load", o); o() }, K = (() => { const a = { inCollect: !1, pickupSelected: !1, validForm: !1, runningObserver: !1, collectReset: !1 }, o = () => { $(".shp-alert.vtex-omnishipping-1-x-warning").remove(), $(".pickup-marker-blue").remove(), $("#change-pickup-button").length && ($('<button class="vtex-omnishipping-1-x-pickupPointSeeMore button-see-pickup-point btn btn-link" id="tfg-pickup-see-more-button" type="button">Collect Point Details</button>').appendTo(".vtex-omnishipping-1-x-PickupPoint"), $('<button class="vtex-change-pickup button-change-pickup-point" id="tfg-pickup-button" type="button">Change</button>').appendTo(".vtex-omnishipping-1-x-PickupPoint"), $("#change-pickup-button").remove(), $("#details-pickup-button").remove()), $(".vtex-omnishipping-1-x-ask").length && ($(".vtex-omnishipping-1-x-ask").empty(), $('<div class="pickup-map-container">\n          <div class="pickup-map-icon">\n            <svg class="icon-map" xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 48 48" fill="none">\n              <rect width="48" height="48" rx="24" fill="#2424E4"/>\n              <path d="M24.2147 11C21.5065 11.0031 18.9102 12.0802 16.9952 13.9952C15.0802 15.9102 14.0031 18.5065 14 21.2147C14 29.9552 23.2861 36.5599 23.6807 36.8385C23.8389 36.9438 24.0247 37 24.2147 37C24.4047 37 24.5905 36.9438 24.7486 36.8385C25.1433 36.5599 34.4294 29.9552 34.4294 21.2147C34.4263 18.5065 33.3491 15.9102 31.4342 13.9952C29.5192 12.0802 26.9228 11.0031 24.2147 11ZM24.2147 17.5003C24.9493 17.5003 25.6675 17.7181 26.2783 18.1262C26.8891 18.5344 27.3652 19.1145 27.6464 19.7932C27.9275 20.472 28.0011 21.2188 27.8577 21.9393C27.7144 22.6599 27.3607 23.3217 26.8412 23.8412C26.3217 24.3607 25.6599 24.7144 24.9393 24.8577C24.2188 25.0011 23.472 24.9275 22.7932 24.6464C22.1145 24.3652 21.5344 23.8891 21.1262 23.2783C20.7181 22.6675 20.5003 21.9493 20.5003 21.2147C20.5003 20.2296 20.8916 19.2848 21.5882 18.5882C22.2848 17.8916 23.2296 17.5003 24.2147 17.5003Z" fill="#FCFCFC"/>\n            </svg>\n            Find nearby collect points\n            <div class="pickup-map-text">\n              Search for addresses that you frequently use and we’ll locate stores nearby.\n            </div>\n          </div>\n          <button class="pickup-map-geolocation" id="find-pickups-button-new" type="button">\n            <svg xmlns="http://www.w3.org/2000/svg" width="15" height="16" viewBox="0 0 15 16" fill="none">\n              <path d="M1.12954 2.34666L5.24985 14.2506C5.42563 14.7639 6.15688 14.7498 6.3186 14.2295L7.97798 8.84354C8.00302 8.75549 8.05054 8.67548 8.11588 8.61138C8.18122 8.54727 8.26213 8.50127 8.35063 8.47791L13.7295 6.81854C14.2499 6.65682 14.2639 5.92557 13.7506 5.74979L1.84672 1.62948C1.74671 1.59433 1.6388 1.58815 1.53542 1.61167C1.43205 1.63519 1.33743 1.68745 1.26247 1.76241C1.18751 1.83737 1.13525 1.93199 1.11173 2.03536C1.08822 2.13873 1.09439 2.24665 1.12954 2.34666V2.34666Z" stroke="#2424E4" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>\n            </svg>\n            Use my current location\n          </button>\n          <button class="pickup-map-manual" id="find-pickups-manually-search">\n            Manually search for an address\n          </button>\n        </div>').appendTo(".vtex-omnishipping-1-x-ask")), $("#pkpmodal-close").unbind().click((() => { $("#tfg-pickup-map").remove() })); const e = function (e) { $('<div class="tfg-pickup-map" id="tfg-pickup-map"><div class="tfg-pickup-map-content"></div></div>').appendTo($("body")), $("body").css("position", "fixed"), $("body").css("width", "100%"); const t = document.createElement("iframe"); t.src = "https://pickup-map.bashconnect.com/", t.width = "100%", t.height = "100%", t.id = "map", t.allow = "geolocation", $(t).appendTo(".tfg-pickup-map-content"), window.Penpal.connectToChild({ iframe: t, methods: { sendAttachment: e => { j(), window.vtexjs.checkout.sendAttachment("shippingData", e), $("#tfg-pickup-map").remove(), $("body").css("overflow", "auto"), $("body").css("width", "auto"), $("body").css("position", "relative") }, getCheckoutJS: () => window.vtexjs.checkout.orderForm, getSpecialFields: () => l(window.vtexjs.checkout.orderForm.items), remove: () => { $("#tfg-pickup-map").remove(), $("body").css("overflow", "auto"), $("body").css("width", "auto"), $("body").css("position", "relative") }, getState: () => e } }), $("#tfg-pickup-map").click((e => { e.stopPropagation(), $("#tfg-pickup-map").remove(), $("body").css("overflow", "auto"), $("body").css("width", "auto"), $("body").css("position", "relative") })) }; $("#tfg-pickup-button").unbind().click((() => e("none"))), $("#tfg-pickup-see-more-button").unbind().click((() => e("pickup"))), $("#find-pickups-button-new").unbind().click((() => e("geolocate"))), $("#find-pickups-manually-search").unbind().click((() => e("manual"))) }, r = () => { if ($("span.help.error").remove(), a.validForm = !0, ["pickup-receiver", "custom-pickup-complement"].forEach((e => { let t, s = !0; switch (e) { case "pickup-receiver": s = !($(`#${e}`).length > 0 && !$(`#${e}`).attr("disabled") && !$(`#${e}`).val()), t = ".shp-pickup-receiver"; break; case "custom-pickup-complement": s = !!(n = $(`#${e}`).val()) && ("0" === (n = n.replace(/\s/g, ""))[0] ? n.match(/[0-9\s]{10}/) : n.match(/[0-9\s]{9,}/)), t = "#box-pickup-complement" }var n; s ? $(t).removeClass("error") : ($(t).addClass("error"), $(t).append('<span class="help error">This field is required.</span>'), $(`${t} span.error`).show(), p(), a.validForm = !1) })), a.validForm) { let e = $("#custom-pickup-complement").val().replace(/\s/g, ""); 9 === e.length && "0" !== e[0] && (e = `0${e}`), localStorage.setItem("saving-shipping-collect", !0), $("#btn-go-to-payment").trigger("click"); try { window.vtexjs.checkout.getOrderForm().then((t => { const { address: s } = t.shippingData; return C(i, { phone: e }).then((() => { var t, n; t = s.receiverName, n = e, t && n && ($(".vtex-omnishipping-1-x-SummaryItemAddress .collect-receiver").length ? $(".collect-receiver").html(`${t} - ${n} `) : $(".vtex-omnishipping-1-x-SummaryItemAddress").append(`<p class="collect-receiver">\n      ${t} - ${n}\n      </p>`)) })), window.vtexjs.checkout.calculateShipping(s) })).done((() => { localStorage.removeItem("saving-shipping-collect") })) } catch (e) { console.error("VTEX_ORDERFORM_ERROR: Could not load at CollectController", e), z({ eventCategory: "Checkout_SystemError", action: "OrderFormFailed", label: "Could not getOrderForm() from vtex", description: "Could not load orderForm for Collect." }) } } }, d = () => { const d = $("div#postalCode-finished-loading").length > 0; $("#shipping-option-pickup-in-point").one("click", (() => { a.collectReset = !0 })), window.location.hash === t && d ? (a.inCollect = $("#shipping-option-pickup-in-point").hasClass("shp-method-option-active"), a.pickupSelected = 0 === $("div.ask-for-geolocation").length, a.inCollect && (($("#tfg-pickup-button").length || $("#tfg-pickup-see-more-button").length) && ($("#find-pickups-manually-search").length || $("#find-pickups-button-new").length) || o(), u(), a.pickupSelected && !a.collectReset ? ($("button.shp-pickup-receiver__btn").trigger("click"), $("div.shp-pickup-receiver").addClass("show"), $("p#box-pickup-complement").addClass("show"), (() => { const t = window.vtexjs.checkout.orderForm?.clientProfileData?.phone ?? $("#client-phone").val() ?? ""; 0 === $("input#custom-pickup-complement").length ? ($(".btn-go-to-payment-wrapper").before(e), (() => { const e = document.querySelector("input#custom-pickup-complement"); e && e.setAttribute("placeholder", "") })(), t && $("input#custom-pickup-complement").val(t)) : "" === $("input#custom-pickup-complement").val() && $("input#custom-pickup-complement").val(t), (() => { const { firstName: e, lastName: t } = window.vtexjs.checkout.orderForm?.clientProfileData, s = $("#client-first-name").val(), n = $("#client-last-name").val(), a = e ? [e, t].join(" ") : [s, n].join(" "); "" === $("input#pickup-receiver").val() && ($("input#pickup-receiver").val(a.trim()), window.vtexjs.checkout.getOrderForm().then((e => { const { shippingData: t } = e; return t.address.receiverName = a.trim(), window.vtexjs.checkout.sendAttachment("shippingData", t) }))) })() })(), (() => { if ($("#custom-go-to-payment").length <= 0) { const e = $("#btn-go-to-payment"), t = e.clone(!1); $(e).hide(), $(t).data("bind", ""), $(t).removeAttr("id").attr("id", "custom-go-to-payment"), $(t).removeAttr("data-bind"), $(t).css("display", "block"), $("p.btn-go-to-payment-wrapper").append(t), $(t).on("click", r) } })()) : ($("div.shp-pickup-receiver").removeClass("show"), $("p#box-pickup-complement").removeClass("show")), a.collectReset && ((() => { $(".delivery-group-content").empty(), $(".btn-go-to-payment-wrapper").empty(), $('<div><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M12,1A11,11,0,1,0,23,12,11,11,0,0,0,12,1Zm0,19a8,8,0,1,1,8-8A8,8,0,0,1,12,20Z" opacity=".25" stroke="#FCFCFC" fill="#FCFCFC"/><path d="M12,4a8,8,0,0,1,7.89,6.7A1.53,1.53,0,0,0,21.38,12h0a1.5,1.5,0,0,0,1.48-1.75,11,11,0,0,0-21.72,0A1.5,1.5,0,0,0,2.62,12h0a1.53,1.53,0,0,0,1.49-1.3A8,8,0,0,1,12,4Z" stroke="#000" fill="#000"><animateTransform attributeName="transform" type="rotate" dur="0.75s" values="0 12 12;360 12 12" repeatCount="indefinite"/></path></svg><div>').css({ display: "flex", "justify-content": "center", "align-items": "center", "min-height": "100px" }).appendTo(".delivery-group-content"); const { orderForm: e } = window.vtexjs.checkout, { shippingData: t } = e, s = { ...t, address: null, availableAddresses: t.availableAddresses, selectedAddresses: t.selectedAddresses.filter((e => "search" !== e.addressType)), logisticsInfo: t.logisticsInfo }; window.vtexjs.checkout.sendAttachment("shippingData", s), j(), o() })(), a.collectReset = !1), $("p.vtex-omnishipping-1-x-shippingSectionTitle").text("Collect options"), $("#change-pickup-button").text("Available pickup points"), $("h2.vtex-omnishipping-1-x-geolocationTitle.ask-for-geolocation-title").text("Find nearby Click & Collect points"), $("h3.vtex-omnishipping-1-x-subtitle.ask-for-geolocation-subtitle").text("Search for addresses that you frequently use and we'll locate stores nearby."), a.pickupSelected && $("label.shp-pickup-receiver__label").text("Recipient's name")), localStorage.getItem("shipping-incomplete-values") && ($("#custom-go-to-payment").trigger("click"), localStorage.removeItem("shipping-incomplete-values"))) : ($("#box-pickup-complement").remove(), window.location.hash === s && setTimeout((() => { const e = window.vtexjs.checkout.orderForm?.shippingData?.address; if (!localStorage.getItem("saving-shipping-collect")) { const { phone: s } = F(i); !e || e.addressType !== n || e.receiverName && s || (window.location.hash = t, localStorage.setItem("shipping-incomplete-values", !0)) } }), 1e3)), c() }, c = () => { if (a.runningObserver) return; const e = document.querySelector(".shipping-container .box-step"), t = new MutationObserver((() => { a.runningObserver = !0, d() })); e && t.observe(e, { attributes: !1, childList: !0, characterData: !1 }) }; return $(document).ready((() => { d() })), $(window).on("hashchange orderFormUpdated.vtex", (() => { d() })), { state: a, init: () => { } } })(), H = () => ((async () => { const e = await y.getAddresses(); return e.length > 0 ? { data: e } : window.vtexjs.checkout.getOrderForm().then((e => { const { email: t } = e?.clientProfileData, s = ["id", "addressType", "addressQuery", "addressName", "reference", "number", "geolocation", "receiverName", "complement", "companyBuilding", "street", "neighborhood", "city", "postalCode", "state", "country", "tvID", "geoCoordinate"].join(","), n = { headers: b({ cookie: !0, cache: !0, json: !1 }), credentials: "include" }, a = Date.now(); return fetch(`${r}masterdata/addresses?t=${a}&_fields=${s}&_where=${encodeURIComponent(`userIdQuery=${t}`)}`, n).then((e => e.json())).then((async e => (e.data && y.loadAddresses(e.data), e))).catch((e => g(`GET_ADDRESSES_ERROR: ${e?.message}`))) })) })().then((({ data: e }) => { const t = e.map((e => v(e))); document.getElementById("bash-address-list") && (document.getElementById("bash-address-list").innerHTML = t.join("")), $("#back-button-select-address").hasClass("inactive") && $("#back-button-select-address").show(), u(), e.length < 1 && (window.postMessage({ action: "setDeliveryView", view: "address-search" }), $("#bash--input-address-search").focus(), $("#back-button-select-address").hide(), $("#back-button-select-address").addClass("inactive")) })).catch((e => { throw console.error("ERROR getAddresses", e), new Error("Error getAddresses", e.message) })), '\n <div class="bash--addresses shimmer" id="bash-address-list">\n    Loading addresses...\n  </div>\n  '), X = ({ label: e, name: t, value: s = "", required: n = !0, type: a = "text", placeholder: o, autoComplete: i = "on", maxLength: r, minlength: d, disabled: c = !1, options: l, checked: u, error: p = "This field is required." }) => { const m = t.replace(/\s/g, "-"), v = `<label id="bash--label-${m}" for="bash--input-${m}">${e}</label>`; return `\n<p class="input bash--${a}field-${t.replace(/\s/g, "-")} bash--${a} ${n ? "required" : "optional"}">\n  ${e && "checkbox" !== a ? v : ""}\n  ${(() => { switch (a) { case "radio": return h({ name: t, options: l }); case "dropdown": return (({ name: e, disabled: t = !1, options: s, required: n }) => { const a = s.find((e => !0 === e.selected)); return `\n  <select \n    name="${e}" \n    ${n ? " required " : ""} \n    ${t ? " disabled " : ""} \n    id="bash--input-${e}" \n    class="input-large" \n  >\n  ${s.map((({ value: e, label: t, selected: s }, n) => `\n    <option \n    ${0 === n ? " disabled " : ""}\n    ${0 !== n || a ? "" : " selected "}\n    ${s ? " selected " : ""}\n      value="${e}" \n    >${t}</option>\n    `)).join("")}\n  </select>\n  ` })({ name: t, disabled: c, options: l, required: n }); case "note": return (({ value: e, name: t }) => `\n  <div class="bash--note-field ${t}">\n  ${e}\n  </div>\n  `)({ name: t, value: s }); case "checkbox": return (({ name: e, label: t, checked: s, value: n }) => `\n    <label class="tfg-checkbox-label">\n       <input \n        type='checkbox' \n        name="${e}" \n        id="bash--input-${e}"\n        ${s ? "checked='checked'" : ""}\n        value=${n ?? ""}\n      />\n      <span>${t}</span>\n    </label>\n  `)({ name: t, label: e, checked: u }); default: return (({ name: e, value: t = "", required: s = !0, type: n = "text", placeholder: a, autoComplete: o = "on", minLength: i = 0, maxLength: r = 0 }) => `\n  <input \n    ${s ? " required " : ""}\n    autocomplete="${o}" \n    id="bash--input-${e.replace(/\s/g, "-")}" \n    type="${n}" \n    name="${e}" \n    ${i > 0 ? `minlength="${i}"` : ""}\n    ${r > 0 ? `maxlength="${r}"` : ""}\n    placeholder="${a ?? ""}" \n    class="input-xlarge" \n    value="${t}" \n  />\n`)({ name: t, value: s, required: n, type: a, placeholder: o, autoComplete: i, maxLength: r, minlength: d }) } })()}\n  <span class="bash--field-error">${p}</span>\n</p>  \n` }, Q = () => (setTimeout((() => { (() => { if (!window.google) return; const e = document.getElementById("bash--input-address-search"); if (!e) return; const t = new window.google.maps.places.Autocomplete(e, { componentRestrictions: { country: "ZA" } }); window.google.maps.event.addListener(t, "place_changed", (() => { const s = t.getPlace(), { address_components: n, geometry: a } = s; (e => { const { street: t, neighborhood: s, postalCode: n, state: a, city: o, lat: i, lng: r } = e; document.getElementById("bash--address-form").reset(), document.getElementById("bash--input-addressId").value = "", document.getElementById("bash--input-addressName").value = "", document.getElementById("bash--input-number").value = "  ", document.getElementById("bash--input-street").value = t ?? "", document.getElementById("bash--input-neighborhood").value = s ?? "", document.getElementById("bash--input-city").value = o ?? "", document.getElementById("bash--input-postalCode").value = n ?? "", document.getElementById("bash--input-state").value = B(a), document.getElementById("bash--input-lat").value = i || "", document.getElementById("bash--input-lng").value = r || "", $(":invalid").trigger("change") })(((e, t) => { if (!e || e.length < 1) return {}; const s = e.find((e => e.types.includes("street_number")))?.long_name, n = e.find((e => e.types.includes("route")))?.long_name, a = e.find((e => e.types.includes("sublocality")))?.long_name, o = e.find((e => e.types.includes("locality")))?.long_name, i = e.find((e => e.types.includes("postal_code")))?.long_name, r = e.find((e => e.types.includes("administrative_area_level_1")))?.long_name, d = { lat: "", lng: "" }; return t && (d.lat = t.location.lat(), d.lng = t.location.lng()), { street: `${s ?? ""} ${n ?? ""}`.trim(), neighborhood: a, city: o, postalCode: i, state: r, ...d } })(n, a)), window.postMessage({ action: "setDeliveryView", view: "address-form" }), e.value = "" })), e?.addEventListener("keyup", R) })() }), 500), `\n  \n  ${X({ name: "address-search", placeholder: "Start typing an address...", autoComplete: "off" })}\n    <div id="no-address-search-results-notification" class="notification info" >\n      <span class="icon"></span>\n      <div class="notification-content">\n      We could not find your address. \n        <a class="no-results-drop-down" href="" data-view="address-form" id="no-address-search-results">\n          Please click here to enter it manually.\n        </a>\n    </div>\n  `), Y = ({ hasFurnOnly: e, hasFurnMixed: t }) => `\n  <div class="bash--delivery-container" id="bash--delivery-container" data-view="select-address">\n    <div id="bash--shipping-messages">\n      <div id="bash-alert-container"></div>\n      \n  <div id="tfg-custom-tvrica-msg" class="tfg-custom-msg">\n    <p class="tfg-custom-icon"></p>\n    <p class="tfg-custom-text">\n      You can't collect this order in store because your cart contains items \n      which require either RICA or TV License validation.\n    </p>\n  </div>\n\n      \n  <div id="tfg-custom-mixed-msg" class="tfg-custom-msg">\n    <p class="tfg-custom-icon"></p>\n    <p class="tfg-custom-text">\n      We'll ship your furniture and other items in your cart to the selected address. \n      Only the furniture delivery fee will apply.\n      </p>\n  </div>\n\n       \n \n<div id="bash-delivery-error-container"   >\n</div>\n    </div>\n   <form id="bash--delivery-form" name="bash--delivery-form" method="post">\n\n    <section class="bash--delivery-view" data-section="select-address">\n    <div class="bash--heading">\n        <h2>Delivery address</h2>\n        <a href="#" data-view="address-search">Add address</a>\n      </div>\n      ${H()}\n    </section>\n\n    <section id="bash-delivery-options" class="shipping-method bash--delivery-view" data-section="select-address">\n      <hr>\n      <div class="bash--heading sub-heading">\n        <h3>Delivery method</h3>\n        ${e || t ? '\n<a \n  href="http://image.tfgmedia.co.za/image/1/process/500x790?source=http://cdn.tfgmedia.co.za/15/Marketing/HTMLPages/Furniture_Delivery_Fees_tab_image.jpg"\n  class="furniture-fees-link" \n  target="_blank"\n>\n  Furniture delivery costs\n</a>\n' : ""}\n      </div>\n      ${(({ hasFurnOnly: e, hasFurnitureMixed: t }) => `\n  <label class="bash--delivery-option-display" >\n  ${h({ name: "delivery-option", options: [{ checked: !0, value: !0 }] })}\n   \n   <div id="bash--delivery-option-text" class="bash--delivery-option-text">\n      <span class="normal-delivery">\n        Deliver within ${t ? "3 - 10" : e ? "5 - 10" : "3 - 5"} working days\n      </span>\n   </div>\n\n  <div id="bash--delivery-fee" class="bash--delivery-fee">\n    R50\n  </div>\n</label>\n  `)({ hasFurnOnly: e, hasFurnitureMixed: t })}\n      <button \n        class="submit btn-go-to-payment btn btn-large btn-success"\n        id="btn-save-delivery" \n        type="submit">\n          Go to payment\n      </button>\n    </section>\n   </form>\n\n    <section class="bash--delivery-view" data-section="address-search">\n      <div class="bash--heading">\n        <h3>Add a new delivery address</h3>\n        <a href='#' data-view='select-address' id='back-button-select-address'>&lt; Back</a>\n      </div>\n      <div class="address-search-field-container" id="address-search-field-container">\n          ${Q()} \n      </div>\n      <p style="font-size: 12px; margin: 16px 0" id="type-your-address-above">\n        Type your address above or \n        <a \n          href="" id="link-manual-address-entry"\n          data-view="address-form"\n          onClick="document.getElementById('bash--input-street').focus()"\n          style="text-decoration: underline" \n        >enter it manually</a>.\n      </p>\n    </section>\n    \n    <section class="bash--delivery-view" data-section="address-form">\n       <div class="bash--heading">\n        <h3>Delivery address</h3>\n        <a href="#" class="back-button--search" data-view="address-search">&lt; Back</a>\n        <a href="#" class="back-button--select" data-view="select-address">&lt; Back</a>\n      </div>\n      \n  <form id="bash--address-form" method="post">\n    ${[{ name: "addressId", type: "hidden", value: "", required: !1 }, { name: "addressName", type: "hidden", value: "", required: !1, maxLength: 50 }, { name: "lat", required: !1, type: "hidden", value: "" }, { name: "lng", required: !1, type: "hidden", value: "" }, { name: "street", label: "Street address", required: !0, value: "" }, { name: "addressType", label: "Address type", required: !0, type: "radio", options: [{ value: "residential", label: "Residential", checked: !0 }, { value: "business", label: "Business" }] }, { name: "number", required: !1, value: "  ", type: "hidden" }, { name: "companyBuilding", label: "Building/Complex and number", required: !1, value: "", maxLength: 100 }, { name: "neighborhood", label: "Suburb", value: "", maxLength: 750 }, { name: "city", label: "City", required: !0, value: "", maxLength: 750 }, { name: "postalCode", label: "Postal code", value: "", type: "tel", minlength: 4, maxLength: 4 }, { type: "note", required: !1, name: "suburb-postal-reminder", value: "Make sure to specify the correct Suburb and Postal code so we can easily find your address." }, { name: "state", label: "Province", type: "dropdown", options: [{ value: "", label: "Select" }, { value: "EC", label: "Eastern Cape" }, { value: "FS", label: "Free State" }, { value: "GP", label: "Gauteng" }, { value: "KZN", label: "KwaZulu-Natal" }, { value: "LP", label: "Limpopo" }, { value: "MP", label: "Mpumalanga" }, { value: "NC", label: "Northern Cape" }, { value: "NW", label: "North West" }, { value: "WC", label: "Western Cape" }] }, { type: "note", required: !1, name: "country-display", label: "Country", value: "South Africa" }, { type: "hidden", required: !0, name: "country", value: "ZAF" }, { name: "receiverName", label: "Recipient’s name", required: !0, value: N() }, { name: "complement", label: "Recipient’s mobile number", required: !0, value: c(), type: "tel", helperText: "We send shipping updates to this number." }].map((e => X(e))).join("")}\n\n    <button \n      class="submit btn-go-to-payment btn btn-large btn-success"\n      id="btn-save-address" \n      type="submit"\n    >\n      Save address\n    </button>\n  </form>\n  \n  \n    </section>\n    \n  </div>`, ee = ({ hasFurn: e, hasTV: t, hasSim: s }) => { const n = `\n    <div id="tv-license-form">\n      <hr>\n      <div class="bash--heading sub-heading heading-with-description">\n        <h3>TV license information needed</h3>\n        <p class="tfg-custom-subtitle">Please provide your ID number to validate your TV Licence.</p>\n      </div>\n      \n    ${X({ name: "tv_tvID", label: "SA ID number", required: !0, value: "" })}\n  \n    </div>\n  `, a = `\n    <div id="rica-form">\n      <hr>\n      <div class="bash--heading sub-heading heading-with-description">\n        <h3>Rica information required</h3>\n        <p class="tfg-custom-subtitle">\n          To RICA your SIM card, provide your SA ID (or foreign passport) number and your address as\n          it appears on a valid proof of residence.\n        </p> \n      </div>\n        ${(() => { const { shippingData: { selectedAddress: e } } = window.vtexjs.checkout.orderForm, t = [{ name: "rica_fullName", label: "Full name and surname", required: !0, value: N() || "" }, { name: "rica_streetAddress", label: "Street address", required: !0, value: e?.street || "" }, { name: "rica_suburb", label: "Suburb", value: e?.neighborhood || "" }, { name: "rica_city", label: "City", required: !0, value: e?.city || "" }, { name: "rica_postalCode", label: "Postal code", value: e?.postalCode || "", type: "tel", minlength: 4, maxLength: 4 }, { name: "rica_province", label: "Province", type: "dropdown", options: [{ value: "", label: "Select", disabled: !0 }, { value: "EC", label: "Eastern Cape" }, { value: "FS", label: "Free State" }, { value: "GP", label: "Gauteng" }, { value: "KZN", label: "KwaZulu-Natal" }, { value: "LP", label: "Limpopo" }, { value: "MP", label: "Mpumalanga" }, { value: "NC", label: "Northern Cape" }, { value: "NW", label: "North West" }, { value: "WC", label: "Western Cape" }] }, { type: "note", required: !1, name: "rica-country-display", label: "Country", value: "South Africa" }, { type: "hidden", required: !0, name: "country", value: "ZAF" }]; return `\n    ${[{ name: "rica_idOrPassport", label: "ID or Passport number", required: !0, value: "" }, { name: "rica_sameAddress", label: "Residential address the same as delivery address", type: "checkbox", checked: !0, required: !1 }].map((e => X(e))).join("")}\n    <div class="rica-conditional-fields hide">\n    ${t.map((e => X(e))).join("")}\n    </div>\n  ` })()}\n    </div>\n    `; return `\n  <section class="bash--extra-fields bash--delivery-view" data-section="select-address">\n    ${e ? '\n    <div id="furniture-form">\n      <hr>\n      <div class="bash--heading sub-heading heading-with-description">\n        <h3>Furniture delivery</h3>\n          Please ensure that there is sufficient space to receive your goods and keep in mind \n          that our couriers aren\'t able to hoist goods onto balconies.\n      </div>\n    </div>\n  ' : ""}\n    ${t ? n : ""}\n    ${s ? a : ""}\n  </section>` }, te = (() => { const e = { view: "list", hasFurn: !1, hasTVs: !1, hasSim: !1, hasFurnMixed: !1, hasFurnOnly: !1 }, i = () => { if (window.location.hash === t && $(".shipping-summary-info").length && "Waiting for more information" === $(".shipping-summary-info").text() && (window.location.hash = "#/profile", z({ action: "stepRedirect", label: "redirectShippingToProfile", description: 'User redirect to profile - "Waiting for more information" error.' })), !$("#bash--delivery-container").length) { if (window.vtexjs.checkout.orderForm) { const t = window.vtexjs.checkout.orderForm?.items, { hasFurniture: s, hasTVs: n, hasSimCards: a, hasFurnitureMixed: o, categories: i } = l(t); e.hasFurn = s, e.hasTVs = n, e.hasSim = a, e.hasFurnOnly = s && i.every((e => e === d)), e.hasFurnMixed = o } $(".shipping-data .box-step").append(Y({ hasFurnOnly: e.hasFurnOnly, hasFurnMixed: e.hasFurnMixed })), (e.hasFurn || e.hasSim || e.hasTVs) && ($("#bash-delivery-options").before(ee({ hasFurn: e.hasFurn, hasSim: e.hasSim, hasTV: e.hasTVs })), e.hasSim && O(), e.hasTVs && (async () => { const e = F(o); _(e, S, "tv") })()), $("select, input").on("invalid", (function () { const e = this; $(e)[0].setCustomValidity(" "), $(e).parents("form").addClass("show-form-errors"), $(e).off("change keyUp"), $(e).on("change keyUp", (() => { $(e)[0].setCustomValidity("") })) })) } }; return $(window).unload((() => { x() })), $(document).ready((() => { try { window.vtexjs.checkout.getOrderForm().then((() => { x(), window.location.hash === t ? (i(), $(".bash--delivery-container.hide").removeClass("hide"), $(".bash--delivery-container").css("display", "flex")) : $(".bash--delivery-container:not(.hide)").length && ($(".bash--delivery-container:not(.hide)").addClass("hide"), $(".bash--delivery-container").css("display", "none")) })) } catch (e) { console.error("VTEX_ORDERFORM_ERROR: Could not load at Deliver controller", e), z({ eventCategory: "Checkout_SystemError", action: "OrderFormFailed", label: "Could not getOrderForm() from vtex", description: "Could not load orderForm at Deliver." }) } })), $(window).on("hashchange", (() => { window.location.hash === t ? (i(), M(), $(".bash--delivery-container").css("display", "flex"), $(".bash--delivery-container.hide").removeClass("hide")) : $(".bash--delivery-container:not(.hide)").length && ($(".bash--delivery-container:not(.hide)").addClass("hide"), $(".bash--delivery-container").css("display", "none")) })), $(window).on("orderFormUpdated.vtex", (() => { const e = window.vtexjs.checkout.orderForm?.items, r = window.vtexjs.checkout.orderForm.shippingData?.address?.addressType, { hasTVs: d, hasSimCards: c, hasFurnitureMixed: u } = l(e), { messages: h } = window.vtexjs.checkout.orderForm; if (window.location.hash === t) { const e = h.filter((e => "error" === e.status)); e && q(e) } if (r === n) { if (d || c || u) return window.location.hash !== t && (window.location.hash = t), void setTimeout((() => document.getElementById("shipping-option-delivery")?.click()), 2e3); $("#shipping-data:not(collection-active)").addClass("collection-active"), $(".delivery-active").removeClass("delivery-active") } else i(), $("#shipping-data:not(delivery-active)").addClass("delivery-active"), $(".collection-active").removeClass("collection-active"); M(), (() => { if (!window.vtexjs.checkout.orderForm.totalizers) return; const { value: e } = window.vtexjs.checkout.orderForm.totalizers.find((e => "Shipping" === e.id)) || { value: 5e3 }; let t = "Free"; e > 0 && (t = `R${(e / 100).toFixed(2).replace(".00", "")}`), $("#bash--delivery-fee").length > 0 && (document.getElementById("bash--delivery-fee").innerHTML = t) })(), window.location.hash !== s || (() => { const e = window.vtexjs.checkout.orderForm?.items, { hasTVs: t, hasSimCards: s } = l(e); let n = !0; if (t && (F(o).tvID || (n = !1)), s) { const e = F(a); e.idOrPassport && e.streetAddress && e.postalCode || (n = !1) } return n })() || (p(), window.location.hash = t) })), $(document).on("click", "a[data-view]", (function (e) { e.preventDefault(); const t = $(this).data("view"), s = decodeURIComponent($(this).data("content")); window.postMessage({ action: "setDeliveryView", view: t, content: s }) })), $(document).on("change", 'input[type="radio"][name="selected-address"]', (function () { const e = (e => { try { return JSON.parse(decodeURIComponent(e)) } catch (e) { return } })($(this).parents(".bash--address-listing").data("address")); document.forms["bash--delivery-form"] && (document.forms["bash--delivery-form"].reset(), $("#bash--input-lat").val(""), $("#bash--input-lng").val(""), document.forms["bash--delivery-form"].classList.remove("show-form-errors")), e && k(e.addressName).then((t => { V(t || e, { validateExtraFields: !1 }), $('input[type="radio"][name="selected-address"]:checked').attr("checked", !1), $(this).attr("checked", !0) })) })), $(document).on("change", "#bash--input-rica_sameAddress", (function () { this.checked ? $(".rica-conditional-fields").slideUp((() => O())) : ((() => { const e = $("#bash--input-rica_idOrPassport").val(); _({ idOrPassport: e ?? "", fullName: "", streetAddress: "", suburb: "", city: "", postalCode: "", province: "" }, D, "rica_", !0) })(), $(".rica-conditional-fields").slideDown((() => $("#bash--input-rica_fullName").focus()))) })), $(document).on("change", 'input[name="addressType"]', (function () { $(this).is(":checked") && ("business" === $(this).val() ? $("#bash--label-companyBuilding").text("Business name") : $("#bash--label-companyBuilding").text("Building/Complex and number")) })), $(document).on("click", "#shipping-option-pickup-in-point, #shipping-option-delivery", (function () { "shipping-option-pickup-in-point" === $(this).attr("id") ? $("#bash--delivery-container").hide() : $("#bash--delivery-container").show() })), $(document).on("submit", "#bash--address-form", L), $(document).on("submit", "#bash--delivery-form", U), $(document).on("click", ".remove-cart-item", (function (e) { var t; e.preventDefault(), t = $(this).data("index"), window.vtexjs.checkout.updateItems([{ index: `${t}`, quantity: 0 }]).done((() => { u() })) })), window.addEventListener("message", (e => { const { data: t } = e; if (t && t.action) switch (t.action) { case "setDeliveryView": if (document.querySelector(".bash--delivery-container")?.setAttribute("data-view", t.view), ("address-form" === t.view || "address-edit" === t.view) && (G("#bash--input-complement"), t.content)) try { const e = JSON.parse(decodeURIComponent($(`#${t.content}`).data("address"))); T(e) } catch (e) { console.warn("Could not parse address Json", t.content) } break; case "FB_LOG": break; default: console.error("Unknown action", t.action) } })), { state: e, init: () => { } } })(), se = (() => { const e = { showFurnitureForm: !1, showTVIDForm: !1, showRICAForm: !1, showTVorRICAMsg: !1, showMixedProductsMsg: !1, runningObserver: !1 }, t = () => { setTimeout((() => { (() => { if (window.vtexjs.checkout.orderForm) { const { items: t } = window.vtexjs.checkout.orderForm, { hasFurniture: s, hasTVs: n, hasSimCards: a, categories: o } = l(t); e.showTVIDForm = n, e.showRICAForm = a, e.showTVorRICAMsg = e.showTVIDForm || e.showRICAForm, e.showMixedProductsMsg = t.length > 1 && s && !o.every((e => e === d)) } })(), e.showFurnitureForm ? $("div.subheader").css("display", "none") : $("div.subheader").css("display", "block") }), 500) }; return $(document).ready((() => { t() })), $(window).on("hashchange orderFormUpdated.vtex", (() => { t() })), $(document).on("click", "#shipping-data .btn-link.vtex-omnishipping-1-x-btnDelivery", (() => { t() })), { state: e, setView: e => { document?.body?.setAttribute("data-delivery-view", e) }, showCustomSections: () => { const t = $("#tfg-custom-tvrica-msg").length > 0, s = $("#tfg-custom-mixed-msg").length > 0; let n = !1; var a; (e.showTVorRICAMsg || e.showMixedProductsMsg) && ($(".vtex-omnishipping-1-x-deliveryChannelsWrapper.custom-disabled").length < 1 && ($("#shipping-option-delivery").trigger("click"), $(".vtex-omnishipping-1-x-deliveryChannelsWrapper").addClass("custom-disabled")), e.showTVorRICAMsg && !t && ($(".vtex-omnishipping-1-x-addressFormPart1").prepend('\n  <div id="tfg-custom-tvrica-msg" class="tfg-custom-msg">\n    <p class="tfg-custom-icon"></p>\n    <p class="tfg-custom-text">\n      You can\'t collect this order in store because your cart contains items \n      which require either RICA or TV License validation.\n    </p>\n  </div>\n'), n = !0), e.showMixedProductsMsg && !s && ($(".vtex-omnishipping-1-x-addressFormPart1").prepend('\n  <div id="tfg-custom-mixed-msg" class="tfg-custom-msg">\n    <p class="tfg-custom-icon"></p>\n    <p class="tfg-custom-text">\n      We\'ll ship your furniture and other items in your cart to the selected address. \n      Only the furniture delivery fee will apply.\n      </p>\n  </div>\n'), n = !0)), n && (a = ".tfg-custom-step", $(a).addClass("custom-step-border"), $(a).last().addClass("last-custom-step-border")) }, init: () => { } } })(), ne = document.createElement("script"); ne.setAttribute("src", "https://unpkg.com/penpal@^6/dist/penpal.min.js"), document.head.appendChild(ne), document.addEventListener("DOMContentLoaded", (async () => { let e = window?.vtexjs?.checkout?.orderForm; try { e || (e = await window.vtexjs.checkout.getOrderForm()), e && (se.init(), K.init(), te.init()) } catch (e) { console.error("VTEX_ORDERFORM_ERROR: Could not load at custom-shipping-steps Entry Point", e), z({ eventCategory: "Checkout_SystemError", action: "OrderFormFailed", label: "Could not getOrderForm() from vtex", description: "Could not load orderForm on custom-shipping-steps Entry Point" }), se.init(), K.init(), te.init() } })) })();
